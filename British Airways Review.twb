<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='BritishAirwaysReview_17376664504470' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Food&quot;'>
        <calculation class='tableau' formula='&quot;Food&quot;' />
        <members>
          <member value='&quot;Overall Rating&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Entertainment&quot;' />
          <member value='&quot;Food&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Value&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Parameter 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Overall Rating&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seat Comfort&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Ground Service&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Value&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cabin Staff Service&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='Countries+' inline='true' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Countries' name='textscan.179902l1vcgm3j1d7yp310rjobt1'>
            <connection class='textscan' directory='/Users/abhijit/Desktop/Data Analytics /Tableau/British Airways Project' filename='Countries.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.179902l1vcgm3j1d7yp310rjobt1' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='Region' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.179902l1vcgm3j1d7yp310rjobt1' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='header' ordinal='0' />
              <column datatype='string' name='author' ordinal='1' />
              <column datatype='date' name='date' ordinal='2' />
              <column datatype='string' name='place' ordinal='3' />
              <column datatype='string' name='content' ordinal='4' />
              <column datatype='string' name='aircraft' ordinal='5' />
              <column datatype='string' name='traveller_type' ordinal='6' />
              <column datatype='string' name='seat_type' ordinal='7' />
              <column datatype='string' name='route' ordinal='8' />
              <column datatype='date' name='date_flown' ordinal='9' />
              <column datatype='string' name='recommended' ordinal='10' />
              <column datatype='string' name='trip_verified' ordinal='11' />
              <column datatype='integer' name='rating' ordinal='12' />
              <column datatype='integer' name='seat_comfort' ordinal='13' />
              <column datatype='integer' name='cabin_staff_service' ordinal='14' />
              <column datatype='integer' name='food_beverages' ordinal='15' />
              <column datatype='integer' name='ground_service' ordinal='16' />
              <column datatype='integer' name='value_for_money' ordinal='17' />
              <column datatype='integer' name='entertainment' ordinal='18' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>header</remote-name>
            <remote-type>129</remote-type>
            <local-name>[header]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>header</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author</remote-name>
            <remote-type>129</remote-type>
            <local-name>[author]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>author</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>content</remote-name>
            <remote-type>129</remote-type>
            <local-name>[content]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>content</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>traveller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[traveller_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>traveller_type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seat_type]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_verified</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_verified]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>trip_verified</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>20</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_beverages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[food_beverages]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>food_beverages</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>entertainment</remote-name>
            <remote-type>20</remote-type>
            <local-name>[entertainment]</local-name>
            <parent-name>[ba_reviews.csv]</parent-name>
            <remote-alias>entertainment</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
          <bin default-name='false' value='&quot;Various&quot;'>
            <value>&quot;777&quot;</value>
            <value>&quot;777-300 and A320&quot;</value>
            <value>&quot;787&quot;</value>
            <value>&quot;A19&quot;</value>
            <value>&quot;A219&quot;</value>
            <value>&quot;A230&quot;</value>
            <value>&quot;A318&quot;</value>
            <value>&quot;A319 / A380 / Boeing 737&quot;</value>
            <value>&quot;A319 / Boeing 747&quot;</value>
            <value>&quot;A319 / Boeing 747-400&quot;</value>
            <value>&quot;A319 / Boeing 777&quot;</value>
            <value>&quot;A319 / Boeing 787-8&quot;</value>
            <value>&quot;A319 / Boeing 787-9&quot;</value>
            <value>&quot;A319 / Boeing 789&quot;</value>
            <value>&quot;A319 / Boeing777&quot;</value>
            <value>&quot;A319/320&quot;</value>
            <value>&quot;A319/A320&quot;</value>
            <value>&quot;A320 / Boeing 747-400&quot;</value>
            <value>&quot;A320 / Boeing 767&quot;</value>
            <value>&quot;A320 / Boeing 777&quot;</value>
            <value>&quot;A320 / Boeing 777-200&quot;</value>
            <value>&quot;A320 / Boeing 787&quot;</value>
            <value>&quot;A320 / Boeing 787-9&quot;</value>
            <value>&quot;A320 A350&quot;</value>
            <value>&quot;A320 Finnair&quot;</value>
            <value>&quot;A320 neo&quot;</value>
            <value>&quot;A320 Neo&quot;</value>
            <value>&quot;A320-200&quot;</value>
            <value>&quot;A320-233&quot;</value>
            <value>&quot;A320, A380&quot;</value>
            <value>&quot;A320, Boeing 787&quot;</value>
            <value>&quot;A320/319&quot;</value>
            <value>&quot;A320/A319&quot;</value>
            <value>&quot;A320/B788&quot;</value>
            <value>&quot;A320neo&quot;</value>
            <value>&quot;A320Neo&quot;</value>
            <value>&quot;A320NEO&quot;</value>
            <value>&quot;A321 / Boeing 747-400&quot;</value>
            <value>&quot;A321 / Boeing 777&quot;</value>
            <value>&quot;A321 / Boeing 777-300&quot;</value>
            <value>&quot;A321 / Boeing 787-9&quot;</value>
            <value>&quot;A321 neo&quot;</value>
            <value>&quot;A321 Neo&quot;</value>
            <value>&quot;A321-200&quot;</value>
            <value>&quot;A321-neo&quot;</value>
            <value>&quot;A321neo&quot;</value>
            <value>&quot;A321Neo&quot;</value>
            <value>&quot;A321NEO&quot;</value>
            <value>&quot;A322&quot;</value>
            <value>&quot;A330&quot;</value>
            <value>&quot;A340-300&quot;</value>
            <value>&quot;A340-300, A320&quot;</value>
            <value>&quot;A350&quot;</value>
            <value>&quot;A350-1000&quot;</value>
            <value>&quot;A380 / A319&quot;</value>
            <value>&quot;A380 / A320&quot;</value>
            <value>&quot;A380 / Boeing 747-400&quot;</value>
            <value>&quot;A380 / Boeing 777&quot;</value>
            <value>&quot;A380 and 747&quot;</value>
            <value>&quot;A380 and Boeing 747&quot;</value>
            <value>&quot;A380 and Boeing 767&quot;</value>
            <value>&quot;A380 and Boeing 777&quot;</value>
            <value>&quot;A380-800&quot;</value>
            <value>&quot;A380/A320&quot;</value>
            <value>&quot;Airbus A32&quot;</value>
            <value>&quot;Airbus A320&quot;</value>
            <value>&quot;B737-400 / A380 / A319&quot;</value>
            <value>&quot;B747-400&quot;</value>
            <value>&quot;B747-400 in retro&quot;</value>
            <value>&quot;B777&quot;</value>
            <value>&quot;B777-200&quot;</value>
            <value>&quot;B777-300ER / A320 / A380&quot;</value>
            <value>&quot;Boeing 737&quot;</value>
            <value>&quot;Boeing 737 800&quot;</value>
            <value>&quot;Boeing 737-800&quot;</value>
            <value>&quot;Boeing 744&quot;</value>
            <value>&quot;Boeing 747 / 777&quot;</value>
            <value>&quot;Boeing 747 / A320&quot;</value>
            <value>&quot;Boeing 747 / A380&quot;</value>
            <value>&quot;Boeing 747 &amp; A319&quot;</value>
            <value>&quot;Boeing 747 400&quot;</value>
            <value>&quot;Boeing 747 and Boeing 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777&quot;</value>
            <value>&quot;Boeing 747-400 / 777-200&quot;</value>
            <value>&quot;Boeing 747-400 / A319&quot;</value>
            <value>&quot;Boeing 747-400 / A320&quot;</value>
            <value>&quot;Boeing 747-400 / A380&quot;</value>
            <value>&quot;Boeing 747-400 /A380&quot;</value>
            <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
            <value>&quot;Boeing 757&quot;</value>
            <value>&quot;Boeing 767&quot;</value>
            <value>&quot;Boeing 767-300&quot;</value>
            <value>&quot;Boeing 767, A319&quot;</value>
            <value>&quot;Boeing 777&quot;</value>
            <value>&quot;Boeing 777 - 200&quot;</value>
            <value>&quot;Boeing 777 -200&quot;</value>
            <value>&quot;Boeing 777 / 747&quot;</value>
            <value>&quot;Boeing 777 / A320&quot;</value>
            <value>&quot;Boeing 777 / A380&quot;</value>
            <value>&quot;Boeing 777 200&quot;</value>
            <value>&quot;Boeing 777 200/300&quot;</value>
            <value>&quot;Boeing 777 and Boeing 787&quot;</value>
            <value>&quot;Boeing 777-200 / 747-400&quot;</value>
            <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
            <value>&quot;Boeing 777-200 and A319&quot;</value>
            <value>&quot;Boeing 777-200 ER&quot;</value>
            <value>&quot;Boeing 777-200/300&quot;</value>
            <value>&quot;Boeing 777-200ER&quot;</value>
            <value>&quot;Boeing 777-236 ER&quot;</value>
            <value>&quot;Boeing 777-300&quot;</value>
            <value>&quot;Boeing 777-300 / A380&quot;</value>
            <value>&quot;Boeing 777-300ER&quot;</value>
            <value>&quot;Boeing 777-300ER / A320&quot;</value>
            <value>&quot;Boeing 787 / A320&quot;</value>
            <value>&quot;Boeing 787 Dreamliner&quot;</value>
            <value>&quot;Boeing 787-10&quot;</value>
            <value>&quot;Boeing 787-8&quot;</value>
            <value>&quot;Boeing 787-8 / 787-9&quot;</value>
            <value>&quot;Boeing 787-800&quot;</value>
            <value>&quot;Boeing 787-9&quot;</value>
            <value>&quot;Boeing 787-9 / 777&quot;</value>
            <value>&quot;Boeing 787-9 / A319&quot;</value>
            <value>&quot;Boeing 787-9 / A380-800&quot;</value>
            <value>&quot;Boeing 787-9, A320-200&quot;</value>
            <value>&quot;Boeing 787-9, A380&quot;</value>
            <value>&quot;Boeing 787-900&quot;</value>
            <value>&quot;Boeing 787(9)&quot;</value>
            <value>&quot;Boieng 777-200&quot;</value>
            <value>&quot;Dreamliner&quot;</value>
            <value>&quot;E-190&quot;</value>
            <value>&quot;E170 / A319&quot;</value>
            <value>&quot;E190&quot;</value>
            <value>&quot;EMB190&quot;</value>
            <value>&quot;Embraer&quot;</value>
            <value>&quot;Embraer 170&quot;</value>
            <value>&quot;Embraer 190&quot;</value>
            <value>&quot;Embraer 195&quot;</value>
            <value>&quot;Embraer-190&quot;</value>
            <value>&quot;SAAB 2000&quot;</value>
            <value>&quot;Various&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Metric Selected' datatype='integer' name='[Calculation_378794989217292288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; THEN [rating]&#10;when &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Countries.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries.csv_59565770993242E992700F2D2C4D78F0]' role='measure' type='quantitative' />
      <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' role='measure' type='quantitative' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Author' datatype='string' name='[author]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Content' datatype='string' name='[content]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='date' name='[date_flown]' role='dimension' type='ordinal' />
      <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
      <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Header' datatype='string' name='[header]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
      <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      <column caption='Trip Verified' datatype='string' name='[trip_verified]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/jj/49k6xf8x44s0rj2d5c3wl8700000gn/T/tableau-temp/#TableauTemp_02evcw401grirf1214e1903v83x8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='Countries.csv_59565770993242E992700F2D2C4D78F0' table='[Extract].[Countries.csv_59565770993242E992700F2D2C4D78F0]' type='table' />
            <relation name='ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244' table='[Extract].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' type='table' />
          </relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Countries.csv_59565770993242E992700F2D2C4D78F0]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>251</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Countries.csv_59565770993242E992700F2D2C4D78F0]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>250</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Countries.csv_59565770993242E992700F2D2C4D78F0]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>2</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Countries.csv_59565770993242E992700F2D2C4D78F0]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>3</ordinal>
              <family>Countries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Countries.csv_59565770993242E992700F2D2C4D78F0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>header</remote-name>
              <remote-type>129</remote-type>
              <local-name>[header]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>header</remote-alias>
              <ordinal>4</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1207</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>author</remote-alias>
              <ordinal>5</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>738</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>6</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>863</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>7</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>content</remote-name>
              <remote-type>129</remote-type>
              <local-name>[content]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>content</remote-alias>
              <ordinal>8</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1324</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aircraft</remote-name>
              <remote-type>129</remote-type>
              <local-name>[aircraft]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>aircraft</remote-alias>
              <ordinal>9</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>140</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>traveller_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[traveller_type]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>traveller_type</remote-alias>
              <ordinal>10</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seat_type]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>seat_type</remote-alias>
              <ordinal>11</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>route</remote-alias>
              <ordinal>12</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>733</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_flown</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_flown]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>date_flown</remote-alias>
              <ordinal>13</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>87</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>recommended</remote-name>
              <remote-type>129</remote-type>
              <local-name>[recommended]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>recommended</remote-alias>
              <ordinal>14</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_verified</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_verified]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>trip_verified</remote-alias>
              <ordinal>15</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>16</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seat_comfort</remote-name>
              <remote-type>20</remote-type>
              <local-name>[seat_comfort]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>seat_comfort</remote-alias>
              <ordinal>17</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cabin_staff_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cabin_staff_service]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>cabin_staff_service</remote-alias>
              <ordinal>18</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>food_beverages</remote-name>
              <remote-type>20</remote-type>
              <local-name>[food_beverages]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>food_beverages</remote-alias>
              <ordinal>19</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground_service</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ground_service]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>ground_service</remote-alias>
              <ordinal>20</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_for_money</remote-name>
              <remote-type>20</remote-type>
              <local-name>[value_for_money]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>value_for_money</remote-alias>
              <ordinal>21</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>entertainment</remote-name>
              <remote-type>20</remote-type>
              <local-name>[entertainment]</local-name>
              <parent-name>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</parent-name>
              <remote-alias>entertainment</remote-alias>
              <ordinal>22</ordinal>
              <family>ba_reviews.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Food&quot;'>
          <calculation class='tableau' formula='&quot;Food&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Countries.csv' id='Countries.csv_59565770993242E992700F2D2C4D78F0'>
            <properties context=''>
              <relation connection='textscan.179902l1vcgm3j1d7yp310rjobt1' name='Countries.csv' table='[Countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='Region' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Countries.csv_59565770993242E992700F2D2C4D78F0' table='[Extract].[Countries.csv_59565770993242E992700F2D2C4D78F0]' type='table' />
            </properties>
          </object>
          <object caption='ba_reviews.csv' id='ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244'>
            <properties context=''>
              <relation connection='textscan.179902l1vcgm3j1d7yp310rjobt1' name='ba_reviews.csv' table='[ba_reviews#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='header' ordinal='0' />
                  <column datatype='string' name='author' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='place' ordinal='3' />
                  <column datatype='string' name='content' ordinal='4' />
                  <column datatype='string' name='aircraft' ordinal='5' />
                  <column datatype='string' name='traveller_type' ordinal='6' />
                  <column datatype='string' name='seat_type' ordinal='7' />
                  <column datatype='string' name='route' ordinal='8' />
                  <column datatype='date' name='date_flown' ordinal='9' />
                  <column datatype='string' name='recommended' ordinal='10' />
                  <column datatype='string' name='trip_verified' ordinal='11' />
                  <column datatype='integer' name='rating' ordinal='12' />
                  <column datatype='integer' name='seat_comfort' ordinal='13' />
                  <column datatype='integer' name='cabin_staff_service' ordinal='14' />
                  <column datatype='integer' name='food_beverages' ordinal='15' />
                  <column datatype='integer' name='ground_service' ordinal='16' />
                  <column datatype='integer' name='value_for_money' ordinal='17' />
                  <column datatype='integer' name='entertainment' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244' table='[Extract].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[place]' />
            </expression>
            <first-end-point object-id='Countries.csv_59565770993242E992700F2D2C4D78F0' />
            <second-end-point object-id='ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
      <datasources>
        <datasource caption='Countries+' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' />
      </datasources>
      <datasource-dependencies datasource='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;777&quot;</value>
              <value>&quot;777-300 and A320&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A230&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A380 / Boeing 737&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 747-400&quot;</value>
              <value>&quot;A319 / Boeing 777&quot;</value>
              <value>&quot;A319 / Boeing 787-8&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing 789&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A320 / Boeing 747-400&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 777-200&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 / Boeing 787-9&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320, Boeing 787&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/B788&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 / Boeing 747-400&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 / Boeing 777-300&quot;</value>
              <value>&quot;A321 / Boeing 787-9&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / A319&quot;</value>
              <value>&quot;A380 / A320&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 767&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;A380/A320&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 &amp; A319&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777-200&quot;</value>
              <value>&quot;Boeing 747-400 / A319&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 747-400 /A380&quot;</value>
              <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 777&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / 747&quot;</value>
              <value>&quot;Boeing 777 / A320&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
              <value>&quot;Boeing 777-200 and A319&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300 / A380&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 777-300ER / A320&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / 777&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-9 / A380-800&quot;</value>
              <value>&quot;Boeing 787-9, A320-200&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
              <value>&quot;Various&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]'>
        <groupfilter function='level-members' level='[Aircraft (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]'>
        <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]'>
        <groupfilter function='member' level='[none:seat_type:nk]' member='&quot;Premium Economy&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]'>
        <groupfilter function='level-members' level='[none:traveller_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]' included-values='in-range'>
        <min>#2016-03-01 00:00:00#</min>
        <max>#2023-08-18 23:59:59#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Avg Aircraft'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Aircraft</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Food&quot;'>
              <calculation class='tableau' formula='&quot;Food&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_378794989217292288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; THEN [rating]&#10;when &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_378794989217292288]' derivation='Avg' name='[avg:Calculation_378794989217292288:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' scope='cols' value='Food' />
            <format attr='title' class='0' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' scope='cols' value='Number of reviews' />
            <format attr='tick-color' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eed7d7</color>
                <color>#ecbebd</color>
                <color>#eaa5a4</color>
                <color>#e88d8b</color>
                <color>#e67573</color>
                <color>#e45e5b</color>
                <color>#e24743</color>
                <color>#e0302c</color>
                <color>#de1a16</color>
                <color>#dc0500</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dce4d8</color>
                <color>#c9d8c1</color>
                <color>#b6ccab</color>
                <color>#a5bf97</color>
                <color>#94b384</color>
                <color>#84a772</color>
                <color>#759a61</color>
                <color>#668e52</color>
                <color>#598244</color>
                <color>#4d7638</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' x-axis-name='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' />
              <lod column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Average <[Parameters].[Parameter 1]>: <[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Number of Reviews: <[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</rows>
        <cols>([federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk] + [federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk])</cols>
      </table>
      <simple-id uuid='{E04568FC-11DD-4CA9-8152-68A2AE0D1628}' />
    </worksheet>
    <worksheet name='Maps'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'><![CDATA[Average <[Parameters].[Parameter 1]> By Country]]></run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Food&quot;'>
              <calculation class='tableau' formula='&quot;Food&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_378794989217292288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; THEN [rating]&#10;when &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='ba_reviews.csv' datatype='table' name='[__tableau_internal_object_id__].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' pivot='key' type='quantitative' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_378794989217292288]' derivation='Avg' name='[avg:Calculation_378794989217292288:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[place]' derivation='None' name='[none:place:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Longitude (generated)]' field-type='quantitative' max='-25618718.518094778' min='-36420187.487099379' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Latitude (generated)]' field-type='quantitative' max='4500107.6147012599' min='19063.525487321895' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#ecdadb</color>
                <color>#e7c5c7</color>
                <color>#e2b0b3</color>
                <color>#dd9ca0</color>
                <color>#d9898e</color>
                <color>#d4777c</color>
                <color>#cf656b</color>
                <color>#ca545a</color>
                <color>#c5434b</color>
                <color>#c1343c</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:place:nk]' />
              <color column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' />
              <tooltip column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]' />
              <geometry column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:place:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'><![CDATA[Average <[Parameters].[Parameter 1]>:]]></run>
                <run bold='true'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[Number of Reviews : <[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Latitude (generated)]</rows>
        <cols>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C2A22EC0-1E61-4135-AFED-51F89ED4D7EE}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average &lt;</run>
            <run bold='true' fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1'>&gt; By Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Food&quot;'>
              <calculation class='tableau' formula='&quot;Food&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_378794989217292288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#10;when &apos;Overall Rating&apos; THEN [rating]&#10;when &apos;Cabin Staff Service&apos; THEN [cabin_staff_service]&#10;when &apos;Entertainment&apos; then [entertainment]&#10;when &apos;Food&apos; then [food_beverages]&#10;when &apos;Ground Service&apos; then [ground_service]&#10;when &apos;Seat Comfort&apos; then [seat_comfort]&#10;when &apos;Value&apos; then [value_for_money]&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_378794989217292288]' derivation='Avg' name='[avg:Calculation_378794989217292288:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' value='44' />
            <format attr='title' class='0' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'><![CDATA[Avg. Metric Selected <[Parameters].[Parameter 1]>: ]]></run>
                <run bold='true'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]</rows>
        <cols>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{54F314D4-708F-4B6E-B350-BE8A430BC845}' />
    </worksheet>
    <worksheet name='Summary'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' />
          </datasources>
          <datasource-dependencies datasource='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
            <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
                <bin default-name='false' value='&quot;Various&quot;'>
                  <value>&quot;777&quot;</value>
                  <value>&quot;777-300 and A320&quot;</value>
                  <value>&quot;787&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A219&quot;</value>
                  <value>&quot;A230&quot;</value>
                  <value>&quot;A318&quot;</value>
                  <value>&quot;A319 / A380 / Boeing 737&quot;</value>
                  <value>&quot;A319 / Boeing 747&quot;</value>
                  <value>&quot;A319 / Boeing 747-400&quot;</value>
                  <value>&quot;A319 / Boeing 777&quot;</value>
                  <value>&quot;A319 / Boeing 787-8&quot;</value>
                  <value>&quot;A319 / Boeing 787-9&quot;</value>
                  <value>&quot;A319 / Boeing 789&quot;</value>
                  <value>&quot;A319 / Boeing777&quot;</value>
                  <value>&quot;A319/320&quot;</value>
                  <value>&quot;A319/A320&quot;</value>
                  <value>&quot;A320 / Boeing 747-400&quot;</value>
                  <value>&quot;A320 / Boeing 767&quot;</value>
                  <value>&quot;A320 / Boeing 777&quot;</value>
                  <value>&quot;A320 / Boeing 777-200&quot;</value>
                  <value>&quot;A320 / Boeing 787&quot;</value>
                  <value>&quot;A320 / Boeing 787-9&quot;</value>
                  <value>&quot;A320 A350&quot;</value>
                  <value>&quot;A320 Finnair&quot;</value>
                  <value>&quot;A320 neo&quot;</value>
                  <value>&quot;A320 Neo&quot;</value>
                  <value>&quot;A320-200&quot;</value>
                  <value>&quot;A320-233&quot;</value>
                  <value>&quot;A320, A380&quot;</value>
                  <value>&quot;A320, Boeing 787&quot;</value>
                  <value>&quot;A320/319&quot;</value>
                  <value>&quot;A320/A319&quot;</value>
                  <value>&quot;A320/B788&quot;</value>
                  <value>&quot;A320neo&quot;</value>
                  <value>&quot;A320Neo&quot;</value>
                  <value>&quot;A320NEO&quot;</value>
                  <value>&quot;A321 / Boeing 747-400&quot;</value>
                  <value>&quot;A321 / Boeing 777&quot;</value>
                  <value>&quot;A321 / Boeing 777-300&quot;</value>
                  <value>&quot;A321 / Boeing 787-9&quot;</value>
                  <value>&quot;A321 neo&quot;</value>
                  <value>&quot;A321 Neo&quot;</value>
                  <value>&quot;A321-200&quot;</value>
                  <value>&quot;A321-neo&quot;</value>
                  <value>&quot;A321neo&quot;</value>
                  <value>&quot;A321Neo&quot;</value>
                  <value>&quot;A321NEO&quot;</value>
                  <value>&quot;A322&quot;</value>
                  <value>&quot;A330&quot;</value>
                  <value>&quot;A340-300&quot;</value>
                  <value>&quot;A340-300, A320&quot;</value>
                  <value>&quot;A350&quot;</value>
                  <value>&quot;A350-1000&quot;</value>
                  <value>&quot;A380 / A319&quot;</value>
                  <value>&quot;A380 / A320&quot;</value>
                  <value>&quot;A380 / Boeing 747-400&quot;</value>
                  <value>&quot;A380 / Boeing 777&quot;</value>
                  <value>&quot;A380 and 747&quot;</value>
                  <value>&quot;A380 and Boeing 747&quot;</value>
                  <value>&quot;A380 and Boeing 767&quot;</value>
                  <value>&quot;A380 and Boeing 777&quot;</value>
                  <value>&quot;A380-800&quot;</value>
                  <value>&quot;A380/A320&quot;</value>
                  <value>&quot;Airbus A32&quot;</value>
                  <value>&quot;Airbus A320&quot;</value>
                  <value>&quot;B737-400 / A380 / A319&quot;</value>
                  <value>&quot;B747-400&quot;</value>
                  <value>&quot;B747-400 in retro&quot;</value>
                  <value>&quot;B777&quot;</value>
                  <value>&quot;B777-200&quot;</value>
                  <value>&quot;B777-300ER / A320 / A380&quot;</value>
                  <value>&quot;Boeing 737&quot;</value>
                  <value>&quot;Boeing 737 800&quot;</value>
                  <value>&quot;Boeing 737-800&quot;</value>
                  <value>&quot;Boeing 744&quot;</value>
                  <value>&quot;Boeing 747 / 777&quot;</value>
                  <value>&quot;Boeing 747 / A320&quot;</value>
                  <value>&quot;Boeing 747 / A380&quot;</value>
                  <value>&quot;Boeing 747 &amp; A319&quot;</value>
                  <value>&quot;Boeing 747 400&quot;</value>
                  <value>&quot;Boeing 747 and Boeing 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777&quot;</value>
                  <value>&quot;Boeing 747-400 / 777-200&quot;</value>
                  <value>&quot;Boeing 747-400 / A319&quot;</value>
                  <value>&quot;Boeing 747-400 / A320&quot;</value>
                  <value>&quot;Boeing 747-400 / A380&quot;</value>
                  <value>&quot;Boeing 747-400 /A380&quot;</value>
                  <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
                  <value>&quot;Boeing 757&quot;</value>
                  <value>&quot;Boeing 767&quot;</value>
                  <value>&quot;Boeing 767-300&quot;</value>
                  <value>&quot;Boeing 767, A319&quot;</value>
                  <value>&quot;Boeing 777&quot;</value>
                  <value>&quot;Boeing 777 - 200&quot;</value>
                  <value>&quot;Boeing 777 -200&quot;</value>
                  <value>&quot;Boeing 777 / 747&quot;</value>
                  <value>&quot;Boeing 777 / A320&quot;</value>
                  <value>&quot;Boeing 777 / A380&quot;</value>
                  <value>&quot;Boeing 777 200&quot;</value>
                  <value>&quot;Boeing 777 200/300&quot;</value>
                  <value>&quot;Boeing 777 and Boeing 787&quot;</value>
                  <value>&quot;Boeing 777-200 / 747-400&quot;</value>
                  <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
                  <value>&quot;Boeing 777-200 and A319&quot;</value>
                  <value>&quot;Boeing 777-200 ER&quot;</value>
                  <value>&quot;Boeing 777-200/300&quot;</value>
                  <value>&quot;Boeing 777-200ER&quot;</value>
                  <value>&quot;Boeing 777-236 ER&quot;</value>
                  <value>&quot;Boeing 777-300&quot;</value>
                  <value>&quot;Boeing 777-300 / A380&quot;</value>
                  <value>&quot;Boeing 777-300ER&quot;</value>
                  <value>&quot;Boeing 777-300ER / A320&quot;</value>
                  <value>&quot;Boeing 787 / A320&quot;</value>
                  <value>&quot;Boeing 787 Dreamliner&quot;</value>
                  <value>&quot;Boeing 787-10&quot;</value>
                  <value>&quot;Boeing 787-8&quot;</value>
                  <value>&quot;Boeing 787-8 / 787-9&quot;</value>
                  <value>&quot;Boeing 787-800&quot;</value>
                  <value>&quot;Boeing 787-9&quot;</value>
                  <value>&quot;Boeing 787-9 / 777&quot;</value>
                  <value>&quot;Boeing 787-9 / A319&quot;</value>
                  <value>&quot;Boeing 787-9 / A380-800&quot;</value>
                  <value>&quot;Boeing 787-9, A320-200&quot;</value>
                  <value>&quot;Boeing 787-9, A380&quot;</value>
                  <value>&quot;Boeing 787-900&quot;</value>
                  <value>&quot;Boeing 787(9)&quot;</value>
                  <value>&quot;Boieng 777-200&quot;</value>
                  <value>&quot;Dreamliner&quot;</value>
                  <value>&quot;E-190&quot;</value>
                  <value>&quot;E170 / A319&quot;</value>
                  <value>&quot;E190&quot;</value>
                  <value>&quot;EMB190&quot;</value>
                  <value>&quot;Embraer&quot;</value>
                  <value>&quot;Embraer 170&quot;</value>
                  <value>&quot;Embraer 190&quot;</value>
                  <value>&quot;Embraer 195&quot;</value>
                  <value>&quot;Embraer-190&quot;</value>
                  <value>&quot;SAAB 2000&quot;</value>
                  <value>&quot;Various&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
            <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[entertainment]' derivation='Avg' name='[avg:entertainment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[food_beverages]' derivation='Avg' name='[avg:food_beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Entertainment' datatype='integer' name='[entertainment]' role='measure' type='quantitative' />
            <column caption='Food Beverages' datatype='integer' name='[food_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='integer' name='[rating]' role='measure' type='quantitative' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:cabin_staff_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:entertainment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:food_beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:ground_service:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:seat_comfort:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:value_for_money:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:cabin_staff_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:entertainment:qk]&quot;</bucket>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:food_beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:ground_service:qk]&quot;</bucket>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:seat_comfort:qk]&quot;</bucket>
              <bucket>&quot;[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:value_for_money:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]</column>
            <column>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]' value='209' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='5' />
            <format attr='background-color' value='#de2c11' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Multiple Values]' />
              <text column='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='20'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{41ABCC8A-1169-49A9-9AC1-D959811546F2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>British Airways Review</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_13' value='center' />
          <format attr='vertical-align' id='dash-text_13' value='center' />
          <format attr='wrap' id='dash-text_13' value='on' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Countries+' name='federated.03sg7s01gonpd91b9bxqe1iegqfc' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Pick a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Food&quot;'>
          <calculation class='tableau' formula='&quot;Food&quot;' />
          <members>
            <member value='&quot;Overall Rating&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Entertainment&quot;' />
            <member value='&quot;Food&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Value&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.03sg7s01gonpd91b9bxqe1iegqfc'>
        <column datatype='string' name='[Aircraft (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[aircraft]' new-bin='true'>
            <bin default-name='false' value='&quot;Various&quot;'>
              <value>&quot;777&quot;</value>
              <value>&quot;777-300 and A320&quot;</value>
              <value>&quot;787&quot;</value>
              <value>&quot;A19&quot;</value>
              <value>&quot;A219&quot;</value>
              <value>&quot;A230&quot;</value>
              <value>&quot;A318&quot;</value>
              <value>&quot;A319 / A380 / Boeing 737&quot;</value>
              <value>&quot;A319 / Boeing 747&quot;</value>
              <value>&quot;A319 / Boeing 747-400&quot;</value>
              <value>&quot;A319 / Boeing 777&quot;</value>
              <value>&quot;A319 / Boeing 787-8&quot;</value>
              <value>&quot;A319 / Boeing 787-9&quot;</value>
              <value>&quot;A319 / Boeing 789&quot;</value>
              <value>&quot;A319 / Boeing777&quot;</value>
              <value>&quot;A319/320&quot;</value>
              <value>&quot;A319/A320&quot;</value>
              <value>&quot;A320 / Boeing 747-400&quot;</value>
              <value>&quot;A320 / Boeing 767&quot;</value>
              <value>&quot;A320 / Boeing 777&quot;</value>
              <value>&quot;A320 / Boeing 777-200&quot;</value>
              <value>&quot;A320 / Boeing 787&quot;</value>
              <value>&quot;A320 / Boeing 787-9&quot;</value>
              <value>&quot;A320 A350&quot;</value>
              <value>&quot;A320 Finnair&quot;</value>
              <value>&quot;A320 neo&quot;</value>
              <value>&quot;A320 Neo&quot;</value>
              <value>&quot;A320-200&quot;</value>
              <value>&quot;A320-233&quot;</value>
              <value>&quot;A320, A380&quot;</value>
              <value>&quot;A320, Boeing 787&quot;</value>
              <value>&quot;A320/319&quot;</value>
              <value>&quot;A320/A319&quot;</value>
              <value>&quot;A320/B788&quot;</value>
              <value>&quot;A320neo&quot;</value>
              <value>&quot;A320Neo&quot;</value>
              <value>&quot;A320NEO&quot;</value>
              <value>&quot;A321 / Boeing 747-400&quot;</value>
              <value>&quot;A321 / Boeing 777&quot;</value>
              <value>&quot;A321 / Boeing 777-300&quot;</value>
              <value>&quot;A321 / Boeing 787-9&quot;</value>
              <value>&quot;A321 neo&quot;</value>
              <value>&quot;A321 Neo&quot;</value>
              <value>&quot;A321-200&quot;</value>
              <value>&quot;A321-neo&quot;</value>
              <value>&quot;A321neo&quot;</value>
              <value>&quot;A321Neo&quot;</value>
              <value>&quot;A321NEO&quot;</value>
              <value>&quot;A322&quot;</value>
              <value>&quot;A330&quot;</value>
              <value>&quot;A340-300&quot;</value>
              <value>&quot;A340-300, A320&quot;</value>
              <value>&quot;A350&quot;</value>
              <value>&quot;A350-1000&quot;</value>
              <value>&quot;A380 / A319&quot;</value>
              <value>&quot;A380 / A320&quot;</value>
              <value>&quot;A380 / Boeing 747-400&quot;</value>
              <value>&quot;A380 / Boeing 777&quot;</value>
              <value>&quot;A380 and 747&quot;</value>
              <value>&quot;A380 and Boeing 747&quot;</value>
              <value>&quot;A380 and Boeing 767&quot;</value>
              <value>&quot;A380 and Boeing 777&quot;</value>
              <value>&quot;A380-800&quot;</value>
              <value>&quot;A380/A320&quot;</value>
              <value>&quot;Airbus A32&quot;</value>
              <value>&quot;Airbus A320&quot;</value>
              <value>&quot;B737-400 / A380 / A319&quot;</value>
              <value>&quot;B747-400&quot;</value>
              <value>&quot;B747-400 in retro&quot;</value>
              <value>&quot;B777&quot;</value>
              <value>&quot;B777-200&quot;</value>
              <value>&quot;B777-300ER / A320 / A380&quot;</value>
              <value>&quot;Boeing 737&quot;</value>
              <value>&quot;Boeing 737 800&quot;</value>
              <value>&quot;Boeing 737-800&quot;</value>
              <value>&quot;Boeing 744&quot;</value>
              <value>&quot;Boeing 747 / 777&quot;</value>
              <value>&quot;Boeing 747 / A320&quot;</value>
              <value>&quot;Boeing 747 / A380&quot;</value>
              <value>&quot;Boeing 747 &amp; A319&quot;</value>
              <value>&quot;Boeing 747 400&quot;</value>
              <value>&quot;Boeing 747 and Boeing 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777&quot;</value>
              <value>&quot;Boeing 747-400 / 777-200&quot;</value>
              <value>&quot;Boeing 747-400 / A319&quot;</value>
              <value>&quot;Boeing 747-400 / A320&quot;</value>
              <value>&quot;Boeing 747-400 / A380&quot;</value>
              <value>&quot;Boeing 747-400 /A380&quot;</value>
              <value>&quot;Boeing 747-400 &amp; A320/321&quot;</value>
              <value>&quot;Boeing 757&quot;</value>
              <value>&quot;Boeing 767&quot;</value>
              <value>&quot;Boeing 767-300&quot;</value>
              <value>&quot;Boeing 767, A319&quot;</value>
              <value>&quot;Boeing 777&quot;</value>
              <value>&quot;Boeing 777 - 200&quot;</value>
              <value>&quot;Boeing 777 -200&quot;</value>
              <value>&quot;Boeing 777 / 747&quot;</value>
              <value>&quot;Boeing 777 / A320&quot;</value>
              <value>&quot;Boeing 777 / A380&quot;</value>
              <value>&quot;Boeing 777 200&quot;</value>
              <value>&quot;Boeing 777 200/300&quot;</value>
              <value>&quot;Boeing 777 and Boeing 787&quot;</value>
              <value>&quot;Boeing 777-200 / 747-400&quot;</value>
              <value>&quot;Boeing 777-200 / 787-9 / A319/ 320&quot;</value>
              <value>&quot;Boeing 777-200 and A319&quot;</value>
              <value>&quot;Boeing 777-200 ER&quot;</value>
              <value>&quot;Boeing 777-200/300&quot;</value>
              <value>&quot;Boeing 777-200ER&quot;</value>
              <value>&quot;Boeing 777-236 ER&quot;</value>
              <value>&quot;Boeing 777-300&quot;</value>
              <value>&quot;Boeing 777-300 / A380&quot;</value>
              <value>&quot;Boeing 777-300ER&quot;</value>
              <value>&quot;Boeing 777-300ER / A320&quot;</value>
              <value>&quot;Boeing 787 / A320&quot;</value>
              <value>&quot;Boeing 787 Dreamliner&quot;</value>
              <value>&quot;Boeing 787-10&quot;</value>
              <value>&quot;Boeing 787-8&quot;</value>
              <value>&quot;Boeing 787-8 / 787-9&quot;</value>
              <value>&quot;Boeing 787-800&quot;</value>
              <value>&quot;Boeing 787-9&quot;</value>
              <value>&quot;Boeing 787-9 / 777&quot;</value>
              <value>&quot;Boeing 787-9 / A319&quot;</value>
              <value>&quot;Boeing 787-9 / A380-800&quot;</value>
              <value>&quot;Boeing 787-9, A320-200&quot;</value>
              <value>&quot;Boeing 787-9, A380&quot;</value>
              <value>&quot;Boeing 787-900&quot;</value>
              <value>&quot;Boeing 787(9)&quot;</value>
              <value>&quot;Boieng 777-200&quot;</value>
              <value>&quot;Dreamliner&quot;</value>
              <value>&quot;E-190&quot;</value>
              <value>&quot;E170 / A319&quot;</value>
              <value>&quot;E190&quot;</value>
              <value>&quot;EMB190&quot;</value>
              <value>&quot;Embraer&quot;</value>
              <value>&quot;Embraer 170&quot;</value>
              <value>&quot;Embraer 190&quot;</value>
              <value>&quot;Embraer 195&quot;</value>
              <value>&quot;Embraer-190&quot;</value>
              <value>&quot;SAAB 2000&quot;</value>
              <value>&quot;Various&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[seat_type]' derivation='None' name='[none:seat_type:nk]' pivot='key' type='nominal' />
        <column-instance column='[traveller_type]' derivation='None' name='[none:traveller_type:nk]' pivot='key' type='nominal' />
        <column caption='Seat Type' datatype='string' name='[seat_type]' role='dimension' type='nominal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
        <column caption='Traveller Type' datatype='string' name='[traveller_type]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone forceUpdate='true' h='13706' id='13' type-v2='text' w='15301' x='167' y='280'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#de2c11' />
          </zone-style>
        </zone>
        <zone h='13846' id='14' name='Summary' show-title='false' w='84448' x='15635' y='280'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#de2c11' />
          </zone-style>
        </zone>
        <zone h='38182' id='15' name='Maps' w='44983' x='55100' y='14126' />
        <zone h='10070' id='16' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='13588' x='0' y='35944' />
        <zone h='15944' id='17' mode='radiolist' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]' type-v2='filter' w='13263' x='0' y='46014' />
        <zone h='19301' id='18' mode='radiolist' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]' type-v2='filter' w='13378' x='84' y='63217' />
        <zone h='6154' id='19' mode='dropdown' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]' type-v2='filter' w='13378' x='0' y='82937' />
        <zone h='6154' id='20' mode='dropdown' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]' type-v2='filter' w='13378' x='0' y='90070' />
        <zone h='21678' id='21' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13043' x='251' y='14126' />
        <zone h='37902' id='22' name='Month' w='41472' x='13378' y='14406' />
        <zone h='46434' id='23' name='Avg Aircraft' w='86622' x='13462' y='52587' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>British Airways Review</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97762' id='36' param='vert' type-v2='layout-flow' w='98738' x='631' y='1119'>
                <zone forceUpdate='true' h='13706' id='13' type-v2='text' w='15301' x='167' y='280'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontsize='18'>British Airways Review</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#de2c11' />
                  </zone-style>
                </zone>
                <zone fixed-size='111' h='13846' id='14' is-fixed='true' name='Summary' show-title='false' w='84448' x='15635' y='280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#de2c11' />
                  </zone-style>
                </zone>
                <zone h='21678' id='21' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='13043' x='251' y='14126'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10070' id='16' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='13588' x='0' y='35944'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15944' id='17' mode='dropdown' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]' type-v2='filter' w='13263' x='0' y='46014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19301' id='18' mode='dropdown' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]' type-v2='filter' w='13378' x='84' y='63217'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6154' id='19' mode='dropdown' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]' type-v2='filter' w='13378' x='0' y='82937'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6154' id='20' mode='dropdown' name='Maps' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]' type-v2='filter' w='13378' x='0' y='90070'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38182' id='15' is-fixed='true' name='Maps' w='44983' x='55100' y='14126'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37902' id='22' is-fixed='true' name='Month' w='41472' x='13378' y='14406'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46434' id='23' is-fixed='true' name='Avg Aircraft' w='86622' x='13462' y='52587'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0089BD5F-A7A6-4A38-B63C-0A8B1D3038DC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:seat_type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:traveller_type:nk]' type='filter' />
            <card mode='dropdown' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]' type='filter' />
            <card mode='dropdown' param='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{32623C62-1210-483F-A7D1-1C367A1CC32B}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7DA31259-8846-46FD-9617-53AE112B2E7C}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{00A54387-2464-45DF-AF00-140D11BAF558}' />
    </window>
    <window class='worksheet' name='Avg Aircraft'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[Aircraft (group)]</field>
                  <field>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[__tableau_internal_object_id__].[cnt:ba_reviews.csv_00265C6D0713462FA9AA8FFDE2089244:qk]</field>
                  <field>[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Boeing 777-200&quot;</value>
                <value>80</value>
                <value>3.5249999999999999</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{D26A94A5-3853-40A7-869C-FA4E672CF6DA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg Aircraft'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Maps'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{B3BE5BC4-BAA5-4227-AFD2-508731E46DD4}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='3a696f0c-3c5c-4d2e-a6a4-098a14cde08a' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='3a696f0c-3c5c-4d2e-a6a4-098a14cde08a' node-guid='da19a79a-8a3c-40e2-a4d1-0e96ac990d37' />
        <pair execution-subgraph-guid='3a696f0c-3c5c-4d2e-a6a4-098a14cde08a' node-guid='2cdcd8a8-7c4a-4aca-8d4d-e699d749ffd1' />
      </node-execution-subgraphs>
      <nodes>
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.03sg7s01gonpd91b9bxqe1iegqfc].[avg:Calculation_378794989217292288:qk]' node-guid='2cdcd8a8-7c4a-4aca-8d4d-e699d749ffd1' orientation='horizontal' sheet-identifier='{E04568FC-11DD-4CA9-8152-68A2AE0D1628}' title-input-guid='78dbf25f-c05b-43d1-b567-a9042c20769e' />
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='b29c340c-0273-4645-9867-5bbebc4f345b' node-guid='da19a79a-8a3c-40e2-a4d1-0e96ac990d37' value-output-guid='39792795-247d-42af-9966-93b6bacdf64c' />
      </nodes>
      <edges>
        <edge from='39792795-247d-42af-9966-93b6bacdf64c' to='78dbf25f-c05b-43d1-b567-a9042c20769e' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='384' name='Avg Aircraft' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      /e53mTlzJmfOnOH111/nT//0T/nFL37B008/TV9fH2+++SZ9fX0kJibyT//0T0ydOpWRkRFe
      eOEFysvLCQsLIyYmhr/9278lLCyMn/3sZ+zevZugoCD+8R//kaKiosvKPHv2bAoLC9XbiqLw
      +9//nldeeUVNS/rMM8+g0+k4ePAgP/7xjxkeHh696H777beVuro65Uq6urqUX//614osy1d8
      XBAE4W7yi1/8QvnOd76jeDweZcOGDcqOHTsURVGU0tJSZc2aNYrX61UcDoeyevVqpby8XPn1
      r3+tfOUrX1FaW1uVN954Q/n85z+vuFwu5eDBg8qKFSuUdevWKf/xH/+htLW1KTt27FDKy8uV
      CxcuKN/85jeVf/qnf1IURVF+/vOfK+vXr1cqKiqU8vJyZeHChUpLS4vy5ptvKo8//rjS3Nys
      vPfee8ratWuV4eFhtawjIyPKypUrlT179ihWq1WxWq2Ky+VSTp06pSxZskQpLS1VTpw4oaxe
      vVr5wx/+oPT29ipLly5V3n77baW2tlb54he/qOjWr1/Ppk2bsFqtFBYWquGVa2tr2bZtG888
      88xdPxAiCILg9Xo5cOAADz/8MBaLhdzcXPbu3cuKFSuYO3euGgzT7XajKAoFBQW8/PLL5OTk
      0N7eTkpKCk1NTQwMDACj2cK++93vqilrTSYTO3fu5NChQ9jtdrxeL4qicOjQIZ566imKiooY
      HBxU01UePnyYGTNm0NnZSWxsrJpd7JOREv7u7/5O/ft73/sePT09FBYWct999wGjXfPl5eWE
      hoYSFRXF5z//eTQaDV/84hfR6fV6nn76abZt28ZXv/pVjEYjLpeLpUuX8td//dc3LXemIAiC
      P2tpaaGxsZGXXnqJl156Se1793g8hISEUFhYyP79+3G5XCxYsEANbFldXY3dbgcYNwAbHx+v
      TmDx+Xw8++yzZGVlsWzZMjQaDadPnwYYF7f/Uh6Ph/r6erW//oEHHrhiVIaf//znzJkzBwC9
      Xs+vfvWrccm6jEYjHo8Hj8eDwWAYd79OURQqKytpbm7m6aefJiEhgd7eXioqKti9ezcrVqxQ
      C+fxeJBlGb1ef0MrhD0eDzqd7jO3KMYOvnJxjOLSwguCINxM+/bto6CggB//+MfAaM7rRx99
      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
    </thumbnail>
    <thumbnail height='384' name='Maps' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOx9aXPjyJH2U7jBm5S6e8bj8bGxGxux///vrL0e+3UfEg+QuFFAvR/IrAYh
      3AQpqkdPhGKmJZyFqsyszCcz2fPzs1BVFV3g+z52+z0mi8X3XwoBMIYkipClKQzTBFNVCCHA
      GAMAsNOhWZJgPp12uuetIYQY9Fqb7RZQFHiHAzRNA1MUTOdzgLHzYwe763eknCPlHIZlAQDG
      hgFVUeTfWfEZat6977gwxhDHMXzfh6qq0C0LYRBAUxRMe8yF/HN0eabiu16CIefILeDHMbLT
      MzPGMDbN47p94zgcDrBtG5qmtT6nOA/azIs23/vS+SWEgOu6vdZE1fXyKD6fFsUxDocDHh8e
      YJ0ERNMFgzCEappwdjvMFgukaYrY86CqKuazGSzTxNPzM9wgAI8i2OMxNNOEqqpIOcfEsqDr
      +iAveC0Mubj3+z0Uw0ASx7AmE/iuC3s8RorhBJIQAinnSKIIjLGz52eKAsu2IU73irMMlqpC
      U1Uwxs6UASHLssr7dAEJfSEEdF3HarWCoihwggCjyQQ6Y9jv9xiPx7Asq/V4CCHkTxe0VXZN
      z/HWhD8ATFQVbhQhzTKAsaMh8toP1QO+7wMARqMRAGC5XGK/34Mx1kqGEcq+cXHtdAFjbJD1
      HIYhhBAwTfOi6xTXR9nzaX4UAYzBNM0za70KjDF8/PABzn6PJAjgOw5mkwk+/PwzlJMgSdMU
      nu9DMwwojEFlDB/mc8RJAm006vSRXguXTIQ8hBDwwxCqZcEajyEAGJYFpiiDCv/Q8zAfjzFb
      LqEoivz4WeG/dHyaZUjSFJqiwDKM1s9SdlzRGuecIwgCpGkK0zQxn8/PzkuzDGmWwdJ1WKYJ
      y7Lgui42mw2m0yl0XW81D8vuPxSKC6fs/m9NCaiKgqllwYsiJGmKLMtKlf89Io5jOads20aS
      JHBdVwrJyWQC3/cvli338E1t24bneXId9JUT+fOqrsF++/xZxEmCLI4BAB8fH1tvpbIsA+cc
      jLEziz6OYzw5DgLXxWq5xGI+h3oSSm8JQzxvmqb497dvGM1m4EkCRVEQRxE0XYfWYxdUpqSj
      IMB0NMLitG3sahkXJ1nX84UQcoFmWQZd12HbNqpci0GSwI9jzGwbVm4MsizD4XBAlmWYzWaV
      5xefs68L6NLdQ59r3AOEENiHISxdh9nBbXJLJEmCKIqkjDEMA6PRSBqZwFHORKcdbxzH0nho
      iy6CtckgoN8PZdS5roskSSCEgGVZUFVVGul1z9AV7B+fPwuRs2Z4EOCnDx/kDapuKITAwXXh
      eB4UVYWpqlAYgwDAOUfKGFRNA08SQAiMTROz6VRap0O+xLVw6eLOsgyu6yLMMqi63vu9hRAI
      PA+KooApCsyclSOyDPvtFr/+/PPZlvES4dbmXCEEoiiS21US+koLi9IJAvAsw2o8hlYi5Dnn
      2O/30DQN0+m0crzywr+PEujzfX8UJRAmCVRFgd4x/ndNuK57lB1pCl3XYZomNE1rNAQIXWJZ
      fY6vOzf/uyHlGuf8TBnm72Xbttxxc86hqioURZHj1uY5pPqngzNxvp0v+38A2O52cIMA9mmB
      cs6P20nGoGga1NP11JOFEXGOb8/P+Onjx8pr5p/jR8D//u1vMGxbBsv7vluWpuBxDFXT5Hgm
      cQxN1+Ht9xCcQ9O0iwRRU+C3+Ow0KWez2ZlSbwK5fwBAqRgPTdOwWq0QhiE2mw0Wi0VrIfAa
      eIvuIOvOYnCu60JRFDmfhkDTd7l0vVQpkDPiy4XyTNM0aJoG27bPfs85l7sf2iFwzo8uZ98H
      51yOZ93aOdv/CSGk4C4OTpqm8H0fYRxDZBk4gNFsdvagdVA1DWEUIUmS2mP7BuWGxqULOooi
      MFWFPR5f/CyKqkI5MaoAIPR9GKYJ33Whaxo04KJF0/dddV1vFP4vFEeaQuAo/Ju+qWVZ0DQN
      u90Ok8mkMih2S+Fbt/Df0R+6rsP3fWRZhslkMth1r6mc62KmZcqAnmcIkGLIwzAMAJDrhHMO
      x3Gg6zomk0n5roVcQMDRZaFlGZbz+dlBcRxjt9+D6fpREGUZ2Mna7wKRZUiCACPbxn6/x+Nq
      dVHU/ppK4ZJJE4YhNo4DczzuPEZNz5SlKRhjR4FP145jrBaLXkqg7XsWxzqOY3DOMRqNal1b
      RXdLmCRwowiaqmI5GrWm3+12O+kHzl+ziq3U5V3y9+lzjXcFMAzSNIXnedA0TTJ8uqBuLr3m
      N6qSW7cwaoUQCMMQvu9jOp1KJUE4kxiR7yMOw7MDsizDxnGgWhYUTQMYA1PVXoKNKQp020bI
      OYzRCBvHgR8EZw9bF9gr/q0vFbDVs17wcVzPgzUeD/6B4zBEGsdIowhJECD2PPAkQaYo+Pzl
      CxzHGfR+TcgL/irhTz/KifVErBO1Q8CMMYbFYgEhBBzH6eX3z1+r7m/Fnypcc+79XqGqKmaz
      2Qt/dxvcq/Avg2ToZdnVn41iBUSVTdP07O9newgK2oZRBMs0EUURNo4DzbIGs2SZokA7aSFN
      1+EcDrBMs9R6rYsRFK3ONhTWzs/ac/tY9G0TTdO+dGubpvj506ezd35ar5FwDkXTkHB+2fUH
      Qp1CoO/cNfjIGMNkMkEURViv11gul72e6x1vA113s/cm5Nsib0Rcc2dA8YDtdgvTNKVL6MwF
      BBzdNKHvg+EorA3bvq6rJU0RBQF0VYVpGBgXqF51KPOtDf2sfSZWGIZYb7dI0hTT5fL4kbMM
      yoWBzMjzMJ9MMC5sj+uU35AJTflrxXGMJEkwzsU42tDgKCehTQygCmmawnEczAuuyjbP3RZv
      VaD8CNjtdljkqwy8cfSZf0NSSvMQQsDzPKRpivF4/FIBvBpO/u3A8/Dx4QFGS5bCvSoB4sZ/
      Xa9hTyYXC//TRZHEMdIkgaYoWC0WrXjPQ26P6VpFBXCtCVsGIQSen5/x8PDQmerXdN13vD4O
      hwNGo9FdM78uQRfX57WUAGXo308a4Ik+Op7NsN7t4J3SvZtQpKrei1+WsWN29R9/+glRLs5x
      4UWhmyasyQSabWPb0ud/jTEpKt6ugrYp3tN07nQ6xXa7rX2+NruRe5oz7/iOH/l7lM3/uphn
      2TmXgGTTYrG4IwVAYAzWeAw3DOF6Xu/LDLmwL9HCiqLA1nWILEMUBEhOGdcDPBTiE++3LYZe
      VHXsn6bzij9ZlsmgWNVkz//bMAzYtv0i8P0evL09hh5Ty7IQhuFNd5X3gColULYu6q7R9ljG
      2B0qAABgDIZtw4/jVkqg+JJl/750gnaZiMWJO5/NEHoefNdFOmCg1hqPsevI/BnakriGu61M
      OZQ9r2VZME0Truu2FvzvGB5eFOEQhnDDEH4UIeb8IoaLpmkyqYniW22YWT8C2o5ZE0uy7Tq/
      TwVwgn4qXBUWqKlFdEnPfw0LUFVVTGwbtmnC6sFvrgJTFIRD7Sja3K+G598HdRO2zPovA5Wf
      8Gtchl2/9buy6AZD06AqCjIhEHEOL4rgBAH8nnOT2Hdl7o93HNFF0Nf97T4rQeVgWBZ2hwMW
      wFnSWNsEorrjm/5eRF9aKGMM08kEQZJ0PrcRmgZnv8c8l5X9e8N4PMZ+v0cQBC9S5ul7UVEx
      qpdSNR88z0OSJMiyDMtTZdV31MPQNBinUiSZELLUxyV1hmzbRhAELxLC2q6/t5yoR7ueNsd1
      uSbwUs7dvQIAYzDHY+xcF0vGZLEoGiQhBGzbHqR29vdb1icLFY9vA/9UvmFo6IYB53CAaZqw
      rnD9a6KNQm27GGazGRzHQZqm0DQNiqIc+1TEMdI0haqq0DRNJhllWfbiulmWYTweYzKZSKpp
      n3yD3ysYO5Z+H6LEtGVZ2G63sK9MQ38ryDMch9wN3b8CAI5KYDSC47pQGcPjwwMAyEXsui7C
      MJQVKS+dMG2ETpXwqjov4RzMMAbv+MUYgz0eIzol7/2eMZvNEMcxsixDciq9PZlMaq34KsWv
      qips28Z2u21Vmvodw0PTNKnQu+K1rP4h8m6aqO19PRFlu4C3oQAAgDFolgUex/j6/IwPp85S
      ADCdTpGmKZIkwW63g6qqZ2WE81qz7Za+ixJoo3DiU+W+Pj0AmsAYA2484e/RKiN6G9C/xlEe
      lmXBMAyZmPTuDrotaKf/I6FLDkDd8X1dXEUl8HYUAE61hCwLSRRh5ziYjMeyuJGqqlBVFZZl
      IY7jUnog8D3F3LbtxiSqS3YCRWiGAVzJikzTFIJz7BwHuqadZefm0ddyeG2UfYf8AulTEK4t
      FEXBfD7H4XBonXl87/B9H1EUybr74/G4l5V9TWRZBtu25c7+raFKbjStv7ZMp7JdQj5oXoe8
      Erivr94SmmGAJwnW+z0U4JgVu1zKgTAM40XVO/obBQL3+/3Rb95QjbSMidLH+k2zDNqVLEhV
      0yAYA2fs2G+4ZWOWt4r8IrmFQiP3D8US3irCMEQQBNB1HfP5HIqigHMuGVSzOyESUEMgwzDO
      Ms3zuGdDpk6I11nul+6qu8QJpCy7m1IQPcFwbJgSHg746dOnTt2DNpsNxuNxqwByU0JFE5z9
      HmGaykJ410KWplDTFKuS4OWlO4D8e6ZpijAMMT21oez0jBda7EUF0JQHMgTSNMXhFGw3DOPN
      KQIhBLbbLZY5Qwn4/k2DIIDv+6W146lOv6qq0HVdfj/f92Wexmg0ksF16uZF16BYXVsBF4Yh
      oiiSO65bKvtLcG+5Cm2CxW9eARBElkGEIVa52EAb+L4ve2/WMT7abN2asN3tkCjK1YVH5PvQ
      FAVZmsIwDAghMJtMLt5KD6kA+i7q4gK7lQIAjnMlPfVjGLJpSVcIcez6pKoqoiiCqqrHwl41
      c5Bq7ZOVX2VRx3Esu3Pl3aaWZSHLMnk/irfQ/wdBIP+fc44gCKTBQYwsImmQMilbB5xzeJ4H
      zjlWq9XdCNM2KLqZ7wFNbqEfRgFAHIvJxWGI2XiMScdOXNQ95+HhQU7oMAyRJAn0XD/ftjuG
      MsRxjOfD4ayn7zVw5rZKU2RZBs9x8Euhb3AXFK1GznkvBUAceyEENpsNHh4eOjfyfi0FAHzv
      jNdH8Q2BOI6x3+8xn88RRRHG4zE453BdF8B3YV38zuTzb9toJZ8/0dZgoRyA/H8ZgPHpWdI0
      lYohSZLSip/7/R7j8fjN7bCA+1QAhCrG4puMAZSCHYvJWeMxXN/HdDLpJAiIckaJQKqqyu1y
      EAQQQsA0TTiOIy2drpNU0zSwNAVPkquwgQhnwlrToFyYSTmUFZZlGZ6enqTQ+vTpE7bbLabT
      aWsl8Nq+4Cb/6jUt1iRJ4DgOPnz4AAByzHRdl7vXNE1lzwQSsKqqIgiCTkFseo+yOS6EABgD
      T1PEaYqE87Ne4nnYOZenqqpy57Tb7eD7/guF9NbjLMB1epNciqrn+XEUAIExCLycSG0ExadP
      nxDH8dl2WghxFiiez+fY7/dQVVVaMW01vqIo+PDwgC/Pz1A17XaThDGMa3rq1p9aXf6hi/CN
      4xjb7RaMMcRxLEs5U6eiKIrw+PjYyXp6LZ9wU3DtWt+VchLqoKoqRqMRLMvC4XAAYwxRFEHT
      NCRJ8oIc0QVCiKPAPwn9ptGfWha0CmG+WCzgeZ6cE/ldS5ZllfPgXpls9ybw2+LHUwD43oA+
      3ziljdASQkDX9VorkzGG+XwOxhj2+33nyaid6gIFcXyVzOAyiCyDZRilk5SSpshFQJ2DLg1m
      CSHAT8wn2kWtVitomoavX78ijmNpwc5mM2RZhvV6Lf2+pMCLgqAtxa3P8wLNvROKLfWqjhta
      IHDOYVlW6x7aRF+l56Feu5cgzTL4UdQqmXFm27IURNU3GY/Hsqd0FEVSGTRx4G+BPve+h+fu
      ih9SAWi6jiAMX3TOaoO2Hy9JEnDOe/n75tMpgudnZGk6TKOYBsS+j+XjI4DvQiwIAvn8RLdT
      VRWcc2y3W8zn81KB0XZ8Ys5xCEPoqoqZbUu3GmNMCvw8FEXBcrmUViuxS1ar1dlx17b+qqh5
      9HvO+cVlR/ogCAIEQYAkSSq/TRWGClprqoqJZSFO08pS5IwxTC3rrA5QndXO2LFN6PiU0/P5
      82dMTrvVPgSBIoaeL2WGwlsU/ASNAZ3KE2RZhpRz6FemM14ExhCfgo1dBHSXD0gsicPhcJZ1
      3PY+D4sFvm02l/cJbkCWprBPbI0sy7Db7aBoGkzLgmHb3yf0aZw0TcNyucRut7so4H3wfYS+
      j5Ax8CA4K8lgn+5bXJyqqp5R/56enl7dJ1ymEK6ZeJYH51zWMlIUBY+Pj2f1jl4DuqpCV1WM
      DAP85A7Kw9S0UrdPm/VBbCYjt1u9NKN78J3YieqqqSrUkwx4i4KfoAFAyjmSUwMGgXOmhXKy
      2ojOFQcBDF2H77oYvSIVrg6MHTtn+b5fmRVbhqqte5kFQxZrGIZy6zrpQLU0dB22YVx9F0AC
      i4T/eDqFF8eyMqnAMZeCMQbzJFQYY1gulzKbOq8E2kz2NMsQeB7s6fRIQR2NoOcEVptFTc88
      FJoESlvfMrmnrh3oE0LAcRyYpindTo7j3E1JCobvyuDs9z3GhHIUGGMYjUa9Au1tBfGlc0pX
      VThRhCSKoDAGTVUxf8MF6zQeRTB1HQ+nABy5CCiqn3KONNeQY/HwAM45eMuWja8FRVURJwm6
      kUHbgz44+WWFEFiv17IAWVksoYjFbIb1dov4pLCuMYmYoiBJU+x2u2MAu8SHKwAkaSoVgHy+
      xQLr9VoqgLbP9+3bNxi2LeeQH8eYKEqnKpGkUKki5y0XWF0MSNd1ScUkZlixBPUQcBwHs9kM
      mqZht9tBCPHCHfbWEcex/JlMJnIdXdPN16Toq/4uhECSpkiFQCoEFMagq+oxIJ6mMO6slEZb
      aIvTJCMwxs63lwWLlv6u+/6Z9ZqeugBpLQTftSFw3D6PB3RTNb0TBdnGp8qcrus2Ci5VVTGb
      TLDd75FcKSgssgxRGOLjL7/AjeNKuh6vsGqpLnsXIScYg6pp8l4R52BRhNnpGm2tbU3T4DgO
      np6e8PHjx1b3rrL021r3bY4hf7oQAvv9fjAFkGUZ4jiG53nSiNjtdphOp3dXq+cSZFkmYz2G
      Ycjx7Gudt7X+y5RL2bllc4VnGYIkgXKKcRgnFl/Venor6LyXJCGxWi6hZRliz0Pi+zAYg6ko
      4DfsUFX5jFmGNI4xKlmYaZrKbM6yn75IkkTy2SeTCSaTCbbbbSPrKAgC/PThAwTnyFowTLqC
      KcqxvWYY1i6wfCOPPEajkUz5P7tuzVhpioJFLgBvaBqsnCFRNfbFa2qaBsuy8HgKYHdBl+9J
      gqHqp+4eQ1irRI11HEdSYxlj2O12MAzjhxL+juPAcRyMRiPMZrPWrKYyXLpuq84t+51+cvXM
      bFsKfwBQGIPyRt0/QE8WEMUDlrlMPloMn5+eBnu4vojDEKauy5R0ALKOied5SNMUi8WiV2kE
      ymItBiYXiwWen59lko5hGDBNE09PT/jw4cPZpBJC4HA4IE1TzGYzKIqCT4+P+Ne//43xYjH4
      Dor8/CPTxKGivaYAkJyCW/nnJNprl+YoqqJI36imqlBKFlqVpZ4XqrRAr+3z7hpwHPreVI4k
      P76e58meBFWBcN/3oWnaRdz+WyEIAnieh+l02olY0EZA9905tKH+5nEPsZehMZhpQYOpKwpE
      lh371Z7qlWgVHPTBIQSiMISlaccWjEEgk7qI+kgcfsdxMJlMShdPlSCg7TnVNrEsS2YykqDc
      breSyTAej6Hr+otgtOu6ME3zbCFoqoqfPnzA+nCAObBP2bAsOJ4HI0nAaqzJMEmgn4R3HtRh
      q20iEWMMYRj2tu7yQUBSuJdYeV2ZJLdSBFmWYbvdnrGfCIvFAkmSYL1eQ1VVmKb5ImuWahN9
      /Pjx1d2uwEtBmqYpXNeVBeKozErdeV12mkPg2jGHewfbbDai7xaz7ONkWYbnzQYx51hMJsgA
      7PZ7jE7JRVeDEIh9Hw8Nln3+GbbbrcyaPL+UQBzHcutNBaqiKMLPP/8sJ812u33BymCM4du3
      b3h8fJTCZ7PZQNd1uYA9z8NisXiRYAYAX5+eoF4hqCiEkMytuu9AtVtMXUf+KHoPopMCx29d
      NnfiOMZyuWxdZbUq6AYcXWuHw+HsG1F7R03TpICcTCaVrpI+C7ztORSsrdrhVIExhufn57Pi
      hXX3XK/XUoAKIY50XkWBbdsye/21UXxnx3Fa9RqgnV7ZXGiyum8pwN865bMMvRRA0yAUt1Zx
      HON5u4Vgx9aOWZYhS9NWuQRNXP4sTcFPLp/5yZ3S9rkZY1iv19KaVxQF8SmGYRgGOOfQTs2u
      LcuC53kAIK01Cmbl33c0GuFwOLxgbCRJgjAMz9w+ZTgcDgiFuAo11Hdd2A1VIwm2rmNUsXPL
      /67Mau7CUy9bwGULOooiOWbEj8+yTLKwSBlX1q7pgTZZx0EQyDlD7irGjsXyaOeyKHHrEcUz
      H0Cuux9V6aRjFEXBarVCmqbYbDbQNK12Xl0b+fejpLX8Drnp3HcF8DporQCGePEkSfC83QI4
      fdiTFXe6wbGiZ5Yh9P0jz1jToCrKsZ+uqkI1DCjsmKsQeh4YAEvX8XAStk0TocpK2+12ciHW
      tRT87bffpCU/nU5fTE4S8qPRqHfyUpZl+LbZQL/CLiAOQ4Cx1mwjU9MwaaCn9hE4NLZV36sL
      /5uQpim2222lm6HLc9X9m2eZTIDKhDjGO05uM1VRgNM59P3jOMa3b9/wyy+/SNcj1ZAq7lSL
      94vjGJzzMyGaF0L5433fx36/h2VZ0s15bcFIuzNSfFS6w/O81qwt4F0BvCbYZrMR+XLHpQdd
      4aWFEMdm7nEsS8eqjMHQ9SPtrRCMjOMYfhAgOeUlLBaLs0qDVWnpdcgvJCq0RQqp6npUBjmO
      41LLbgg4+z0CzgePnaRpCh5FMFuWyBgZBkYNu7Sui6LNgu2jAIDLg6JtFEAQx+DU4ATHpLf8
      UbqqwjaM407gdM5ut8NqtQLnHM/Pz7Btu7IyZ1457nY7GX/Ju3jKxoHO45zjcDhIl9i1BFZ6
      yi0hF1aWZTJhrSu54rUVQFf33Y8Eafrf+qUZY5hOp2hTVZ0x9iJoWnbMJc8ymUwQhiEmNWWk
      if1jWRaiKGp97aprVWE2nYLvdkef/YB15+MwxHI+R8i5/J3KGNLCs4wMA3GaYlyox1IU9hSg
      rUKV+6hqsdeh7fflnJ8pgOJ5l9A6GWMYFbKiMyEQc44oSZCJY7JQEgSwTpneYRiCU46MpsG2
      7RcVPT3PQ5ZlmJ4yp6l1I8WnNpsNLMuqdavRe1KP3yRJsNlsEMcx/vjHPw6+vn3fl7EPYgVe
      w/3URABoEzT+PQn0rvhxCMYdUZwUuq6f+ViLyPv5Hcc565h06f3LJvF8OkUYx0CWAex7iY5L
      oOLoMlNPi5Wutg/DYzmI0z14lmF2yspsg0t3X2V/62PVjUYjbDYb6TKpEkhDugwUxmDpOkxN
      Az8Fx/PccNu2YZqm7HtQVpY5jmPYto3NZgMhBGzbPoshmaaJIAhaNaER4pidzDmHbdv46aef
      zv7WBWEYSvp0Efk4z6Xzsm4uNFE1f0Rq5i3xQgF00bY/EjzPa8zodIIApq4fs52v/DyqqmI1
      myEIw6NlmSRgug5V1/tNeiGkn7roXqNaJmqDOydvjQ2VANX2Wm2OYeyYpR6GYeW3LPOhXxIk
      pmsxxl7UxaHfq6qK1WoF13Vf7FD2+z1M04RlWbJNIl0zyzK4rgtVVRuFf5Zl4Jzj27dvsrJr
      lwYwwDHQToXYqPFREAQv8j8459Lv3wdlJII6dOXrv6M9zhTAvQ9wndVcd06bY8MwxMPDQ+Xf
      FUXB2DThxzEyRUGWaxd5DTDGYNs2bNuWLoT1ZgPP9zFtmZCVB08STEqKVlUJriq05eS3Pa7s
      +1yiXGazmaRINuUh3CJQmr9XmRA3DEO60oouHsqYzb9H2bhmWSYpuuPxGLPZDKqqdnq3JEmw
      2+1gmiayLJM5Muv1Wv6dSqBzzkvbOda9e9+5QL9/x3XwZlxATYGaSycO8dvLrBq6jnHa5gdx
      DONU8+dwOGA+n1+lZDHnHLv9Hl4QQNN1CMagqCrc/R7jjiWoeZJA6cEVLy7eawjMoQXxbDZ7
      kTvQB9dWEBRTIn9/8V6UgU0xMCoFTd9kNBpB13VZkjxfQ7/LcxPFVNf1F4JdURRJMzVNE7qu
      y8B0E7oSBIo7s/zu6h3XgdZ2kN+a+6e4zWx6ftu2EUWR9B/nJ2H+XJUxqKeqqaPRCOap7PTQ
      TcL9IMB6u4U5GmG6WEimSRQEvTKFddNEGARnQcw2uMViHNKtBECyUobA0O9LJRGiKJIJbdQg
      h5hx5F+nejnb7RZxHCMMQ/zxj3+Uc26/3yPLMqkIuo4f9RqgxL2ydyX3D62DtuPRlzL5LvRv
      Cw24/8G+xfMRf5n8m0IIGIbxwoo0NA2GpiHLMllX6BpZmL7vwxyNoOr6Gc2wd5mIHIWVAtgU
      5LMb6pkTYye/OIc2CIZWAn0D2Ne2+qksAhkQ4/FYUioVRZHCPI5jHA4H+UyPj4/wPA+Hw0Em
      kI1GI3DOO+8+qTcEseryTXjq0NaoKhP+dTuT4m7i3uXRj4RGFxD5uMkPPfRCbUIXi+OSvxuG
      ITMr6Viy1sqyGUmY0rZ4aEQnN1MXq6sOiqIgONVeV3RdZmPzJIF2albfFAS/NGh6S1iWJXsg
      9KHitkWTe6z4u9EpE/5f//oXHh4ekKYpvn37BtM0z4K2hmHAMAz8+9//hm3b8t//+7//iw8f
      PkilvF6vXxQbbAKVKu8TxM0bAYxVd0d7S3Pl94zGGRBFEb5+/fpCq3cJ7FT9tDn3liAWCbEx
      JpMJfN+H67pyy00wDAOPj4/gnCM5dde65L55CCEARZHd2IYAYwz2ZIIkTaEZBkzbRpZl+PWX
      X6DrOr6t13g6BfxeC13mRtm5eYzHY9i2jfV6DZ7LeyC0zUOg49qykJqePwxD7NMwiV0AACAA
      SURBVPd7rFYrMMYQBAFWq1VlpdXVanVWjvtPf/rTmdDtWghOCCFbTHZF8f3qKNO3zNB9R39o
      jDG5JSUmApWfTU59dSnRg5gFiqLA933oug7DMKTVTLVzAJQuui64h20gsXyoKYdpmtjv9zKR
      hzGG1Woli8opilK7GxDiWAaacy57B5QtkjRNLx6/MjDGMJpMkKUpAs+DSFN4hwP+cOKKD71g
      ++xe2gT3m84h0O5su91Kl8klKCbF0e/K7k/+/GJZEOobQb+zLAuu677IXiYXi2ma+OWXX+Tv
      aX517XddfO58iemu8b+hhPs9rPHfO7R//etf+O///m9kWYbffvsN//mf/4m///3v0g9JiSSK
      ouBvf/sb/vrXv+L//u//MJlMcDgc8OnTJ7nVtm0bX758Oatw2BVVi6nrOUOA6pePx2Nst1vM
      53PEcSxZEUmSYDwey/65iqJgv99LOmn+uaj0Lwn+zWZT2d/V2e8x6cjhbgtV0xD6PpBl0C0L
      39ZrMMakBTqkEmiTpVmGOuHadM1iEJGKprmui81mM9h7FnMi8s+x3+9lbIjiRPR3zrnsgAVA
      soDomLx1zxiTbVopSBsEAXzfl0ZEl25kZL0Xq9e2+S5DWvXvgd77gZb/oDT5iBUwn88RhiHC
      MMRvv/2GX375BUmSQIhjf1LaYn/69AlfvnzBn//8Z0RRBNM0W7lFhmIeDeUnp2t5ngchhAwI
      Uwp/FEWYzWbSOldVFY7jyAJcVBmyGCCj5i95v+tqtZIC6YUQw1FQqFfKMciSBH/8wx/w9PSE
      nz5+xOzEYLpGfKevEqhC1fl1QoWxIwc/SRI8PT1hsVgM3mUrz5aihkPAy7o4ZXOVSowX34UQ
      xzGenp6gKAoMw8DDw4MsxBaGIVar1dn5tBOnmB0FfcMwxHg8Pisr8Rpu1nfBfz8oXQX6qSAb
      lbkloaaqKtI0RRRF2Gw2AI40McuykKYp1us1JpOJLAp1CboKoSGVAAl6y7LkNanFI1H36J5Z
      lkmlZxgGgiB4sfBM03xBE/VPzXLyC4IUS5QkiJKkV8JXG8RJgi/Pz8fnBCotwraBvGsk77RV
      Rl0EiqZpeHh4kN+kzCV06W6TEqa6nN+UCEcEhfy80zQNy+US3759w/PzMxRFgWmaiKLoTPgD
      R0OF3rsu2bEvmgLC+WPecV/QyC9dN3Fnsxk+fPiAf/zjH/jrX/8qsyzpo6dpioeHB/z973/H
      //zP/wzGwX4NkKLLsuyFX5ayTMmfTK4Tqu1O1NDxeAxFUXA4HCpr1FOtlvyi+Pv//R8AwByP
      ryb8AWA8m0E3DAgh8OXbt7NmNXl0ZbgU/zaEEsjvpi7NSSD3x3K5hOu6Z/GcunO63kPTNOky
      HKJWDSWMle2mPnz4ILu1FbPZi8+uaRqCIBisiX0bvAv++wZbr9fC933pl5xOp/A8D5ZlIUmS
      s+JVSZLIRbTdbqEoiqTZZVmGf/7zn/jLX/5yMSsG6OeG6DPRhBCyZy6dn2UZ9vt9ZS2VYqej
      3W4nm3HsdjtZLZRaQlYh75NmjOFfX75AUVUomgbtSu6fKAigqKpsxhOHIcA5lvO5VGpFFH2/
      bb9NmX/+tYVB/l2o6ibN4aLr7hKkaYr9fn/WZ2LId89fq4sff71eN7rAioq2yfdftQO4h+/9
      jnpotD3MLwoS+sDRUiULI88gyHfFAoDPnz/j06dPV2GvXANCCIRJgujUX8DUNExOSV9NDIvJ
      ZIL9fg/GmCye5XkeGDsmVzHG5PiULRyq2Z5fhJ7nIQgCmJYFu2O2bhcUF6lhWRBZhs9PT/j1
      558b2zh2EZDFXcA9CIO8UCNfuOM4yLLsrB/EpaCy4XSvw+HQuNu4Nmi+NlUWbev6y+/EruEG
      fMf1oZEfO48qn2SVFajruqSqDeH/B6onzyVuByEEsnywLMuObQV1HXbO4iYFWKUIVFXFcrmE
      EELGR8jiF0KcsTzKQDuqvNuFpynG0ymMC+vXNEHTNKA4RifBUNdT90fidOeVAPnShRAyNjCU
      i4SuQy7Ce0CSJC/alRbRVEqjzLIfOtj/jttgEHNnCJfPLeDFMaLcszLGMBuNoJUI+bbFrmhh
      02JvkxVs2zbCMJT0WYqpHIKg7av0hl4iiLI0xaSijWVdsk8RVe6jJs583fXrXFJDuxgWiwV8
      38dut8NoNOrdWawI6l18DyBaaZIk8H1fMouKLqo6q77NmL8rgLeBH6abQnFiFnnLaZadCX/g
      6PdHRXDTMAzJgroGqGH2breT9Vxea8mknGNUI6CKO7+mDNCq82m3OVQGbv56XV1TVbtZKsBG
      lV6bnu0edkZdnoFyWhzHwWQykfWE1ut1b0Pu3fp/u3gz5aAvAU1Q6m8rAARxjEwIuFGERQUd
      kITLtSY0UUc3m83rBsxqgp99gr9tXHHfb11Pi6zbCRSPabMraPMOiqJgMpkgCIKzekJ1Y9T0
      7eI47r2j8H0fURQhTVNYltXoYqwDUUqzLJM7PlIEm80Gj4+PAOp3fk3un3e8Hbw5BdBETcwf
      l/87te6jv2WnRvTjCt8stehjjJ35hNsIpC5gjEmf7P/79m2Qa/ZB2Ui2tXDzFGIqD0Id1siV
      VsYsyf+39tly57bZFeSFVBmNtHjdKti2LSmdmqbJ0h1dYwSLxeIsC7wL4jhGkiSSLeb7Prbb
      bWX55jYgqnMexTaVdWhSeO87gLeDi11Ar7kdJmuvy4STiV2WhZltQ63w9VOT6/xiT7MMuyDA
      PgyRDpjrIN9jsCt2Q5dvl2UZ4jg+Y3sRo0nTNJkkyNixreAl9yrOrSr3Udk1i+eU/dSB5omu
      61gul2cNW7bbLYJCvKbJGFkul5Uupfxxxblc7DVBsYmh3ZNd1lHdrvBd+L8tXLQDqPP3FvEa
      E+MSXndZGWhq9J1mGSLOpUtpKLxWg2uRZShTZ/mx45zDcRwp6NM0lYwvKlecD4oDx4zqynuW
      uIGaLPv8sWXXabpPV+TnD/VNAI7v67outtstLMtqtSNoU4GzKFgdx4FhGC/Oi6LoIjdQGYgO
      O5lMWucU5A2wdzfQ20RvBdD1g9+LpdDGhcMYK22GHXIuz+/SR7ctlNcakyx7QQ3NW8nUrKTJ
      7VB0DViWhe12C+AYfKxyMXQN4PY9pin20AUkgNfrtWyTWAUKKDfRL/OgZMOiy4ixY9XdzWYD
      0zQHa0ZElWwpNtCklIvf+t3yf5vopQCG0PbXDK7mUWWdNL0DFWuzbVsuMlvXwdMUSZqe5RMM
      Bf1E0XvB0782GEOac6/k/0ulLyzLeiFAq8aVvis1tQeOTUhc1x1UaHVBF/9/W8HGOYdhGI1+
      fd/3ZXC1LXRdl+XI8xBCyIRL13U7XbMJ+fambaz6W63hd1wPnX0Ov5etnqIoeHh4eOHrJbeP
      F0XY+f6gimA2myF03VJq6jWhKAqS0+4m7zP3PA+TyURy2PvEXAiTyUR2XHMcB8/Pz9hut9hs
      NjgcDoMZFV1+fylIAdTB9/1WOQA05mmaQohjH4CqpEr6NkNnFnPOOwWp74UG+47+eHMsoD7o
      66Nk7HuzHFkG44qF7jRNw8eHB6x3OzBNg0rVH3Hd+ICm60ji+IUPOo7jztZ6k3KgBuh0nKIo
      iONY1paiMsp9cS2BRHWDqJkLzak826j4DEIIRFFU2e2LkGUZNpvNWbMXIUTtWBRjCnXWeF5Q
      1ylwVVXheR50Xe/cZ/gdbxOdFMCli+s1t4t5CmEURTAMQ/43P9npGFpcuq5LSxg4F8SZEDiE
      IWa5stGXQtd1fHp8hOf7iE65CpxzZEJAM82rFIlTVRVhGErBQ01MqorDXYqi4NJ1HavVCofD
      4Uw5DHHvoRQCFY3zPE82daHxiqIIcRzDtm3oui7nWhRFldY/UZEZY7JFZFcl36YrGPW1pjnO
      Ocfj4yOEEDK/gJ5nMplgMpnAdd2zXsp9gvPveBtorQDe6lZPCIHtdgtd12UXM1VVcTgcYJom
      XNeVqfq6rsP3fbmwZrMZRqMR9vu9TOTRFAWaooBnGRTGYJ/YL0OCMYbJeIxJwfr+8vQEoWnD
      L7aTVbjf76EoCkaj0eANU9qACpUR++pSH/MlczZPdRVCyF7Rs9kMaZqedfECIOfJZDKRTZOA
      lzs3IQT2+z2SJIGqqlgsFr13qHXCnxrGKIoi4w9BEGCz2WC73UrG1sPDg3TBPT09wTCMsyq4
      bZXAe1D4baLVKm/LmX4NJRGGoVxMREEk64sKuk2nUxmEpKqPBMuykGUZkiQ5VuM8Zedut1tJ
      xStSQqeWhX0QYGSaMDTtZu89sW24cVxaz+dSMFWFPRrBHJja2gWmaSIIAriue0a7rMI1xp0C
      35TQRnM77+tXVbWUhklcf5qHjuPI+vxZlklBOx6PYZom4jjGbrcbPJhKSibfgQ44ji81liF3
      UxzHSNMUhmFgsViU7vraru+iC/FdIdw/2Ha7FU2NzF+cVONrrL3ZQJOA3BRxHEvLnTpz0X2I
      nUH3XK/XMhOz6TnIJ6uqqvSBe5535svN86BvpQCEEHAOB3hhCHNg90wShpiNRhjdsFlIGSgQ
      GkWR7MyWpyUWjx0anHMZ+7h0fJMkwX6/x3g8luWgi0Fjajva1ee+3W7PaKWMMcRxjDAMkaZp
      a7YV9UomwU+NZ6bT6Ytd4KVB31ctd/KOUtQqgC5JXZxzbLZb2LYtXRfk46zy6VLjFfK5U0JR
      HWhrOxqNKv2rxeemvr1dSvLKAm05BXKNdnp9EEURNo4DhUo4d1xUnHPwJEGWpuCnjFJN17Ga
      zTAuqYt0S+S/Hc0PCoa2LQNyCcj1Q8LzUoGVpimo4dKQxoLjOLIJEWNMxk8mk4lUKmmayozh
      PLuL3HyHw0EWJaQAsGmacgcxn8/flUAPVJXSvsfyGWy73Yoyf2+xhorjOAiTBApjeFgu5cTI
      sgzfvn0DB2CNRojDEJ8eHqAoCtbrtexPSklEZL1zzqU7hqyO/X4vM00VRZEZp0mSgHOONE2h
      aZpsuViG4uQ8HA7Qdf2icrxCHDspjUaj0taJrwEhBPaHA9wggHLa0rMKK1JkGZI4Rpam0BQF
      tmlCNwzsdzukWQamqlAYw3I+b10Ppm22aB/kzyMa7q3aGO52O+mXr0OfBTuk0krTFK7rYjqd
      ys5jnHOZO6CqqlxDtKsyDEO6O9M0rV1HnHN8/fpVtj/Nr59LE/d+dCUwJD322mNVqQAIaZpi
      s90Cug7lJKjjMMTIMDA7NY5/2m4xms3AAASeh0+rFRhjkqscRZFcyOSTpwlaRBRFko/OOZcK
      gZRC28FI01SyH6hRyyVgjJ21cLwXZFmGMI7hBwGiOD62lCTGx0lhG5qGkW3DMk0wRQHD5SUS
      2qLPfYrn7Ha7F9a/EGLwb0HWelW3rHsQWvlnoPjXaDSC4ziYTqdncQsAsmER9bkGvjOvmkA7
      eNpB9zGiismFbfDWFcRQCqAqFjMk2GazqXQBZVmG9WYDxbLO3AxCiKP7IIqgGQaUk6skdF3M
      p1OMRyMZXCKLuWuguO/LBkGAIAigaRpM0zxz+1z6UTabTad0/ltDCIE4SY5JXSdmk1biP+8S
      1+l7XN29+pxTzEJ2XVe2dBwKTQqgiFsLqeL9irGS4jqmek2GYbwY0y7PTrv8n376qfezdxWK
      v3clkI8vXnMXVbl60jTFznHATPOFj5kxBjWfqCQEQtfFx4cHOQmpjzDhFoFSIQSCIKgU0pf6
      YG3bxtPTE1ar1V0myjDGYBrGCybPkNvR10JZ/Gjo5Dhik90jypQ41WhanXbceZCLlRIZi3Og
      qFDrvi3VCSI2XJ958JpMwddAkSAytPIbKv9Cy18MOC4s13XhBQEyxlo3KM9Ty5Ikged5CMMQ
      0+n04o/edqFTTfM6Qd9WCZQNsG3bEELctaDI45punr5MsKGgKEqrCpttQayyLpnIQ9M3q1Bm
      +e92OzycYm1F+L4P0zTlemxL32x6l/F4LHMcKL7QBV2C+LdiFF4bTbIoj67zaQgloLmuC845
      BGPgaYo0y6AZBowO5WYZYxDs2BjdNE2EYYjZbCZ9tF0s70v8Xm0rGXZ5nuJHsW0bu93ubnq8
      DoGqMe/D476VAqDEq0tLRwRBgDAMMRqNXqVIXRPKLPv9fl/auYss/Xw2ch5N66HqG5MribHv
      pVGIYdS1y1lxbhWfv+3zvgU0uYGG8PFfqgQ0putgpwDrJTatZhjwg0CWFcj7US/5kF1eTFVV
      +L4vOdx1W7C+7iCi122329oSx/eAJourbGwZY6/Wl6ALiAHTB3lSAoC7C+wTqnIfSABXfaey
      39fNdRL+VUpAURRYliWpp7QD6ApiIDHGoGnai2J6VfO1KOTuXQF0cfs0rcs+1+hirLF/fP4s
      xIUDKoRAcDhgatuI4xgfP35s9RJt3Axdt0SbzaaRr5/XzE0Bx7pnpZrsskzEKfD8VkHjfckC
      K3KghwoCF5GmKQ6HQ+sdQJIkcF1XCp9LG6q8huuHkHcBlf2NKooqp/LiZUHgqvvV7fqenp5k
      1zdiBZU1rCmC1hutE3o2onjfiuJ7bXT1918ak2x7jzLQfduVgjhpbr2m7o2uqmdc/77o43bI
      H68oSmOAML/97BITKD7PfD4/9hbOMhkgewsKoG5c7926IlDuSFvQfOjqMnqt8WgTlE2S5IUf
      XlXVs7GhXXGbedlk+Dw8PMh1sNvtZKmVfDOZIhMpOHkFNE174TalZ0/T9E3E1Nrg0hyJodF0
      j1rVLYRA4Hlw1muZMVqGJIpk9m/XlyKhTT+XWKGUP9D2vlVbyrYBTlVVoes6OOd4eHgYvE1f
      W+THrG/wtulvt0TxfaqeizpttUEcx7VCsOyerzkeVTtTablp2oteFcVjgKNw1XVdlojo+gz5
      aymKIvN3iAkXBAGiKJIxAcaYLMsSxzE0TavdJWiahiRJZHA5y7LOz3kvuJVAr/rpAy1LU0BR
      wOgDCQGeJMckIiEAITCazWDULB5V17F3XYxsu7MmH3KRUfmGtv7JvPVf3Al0DRS/lgVT5cfP
      o60P9RoC71rbXCGOTVNUVZXF20jYFV0KQhyLA95zglcZqsZNCAHLsrDZbFpdh8qscM4lUaPr
      M5SNEWXGx3EMz/NkIT86TwiBn3/+ufEetDMIwxCMMSRJMkgtplvimsK/ixwi1I1d/jgtOVXA
      5Ce/IWMMlmkehbrnwRyNZGZpFVRVhTAMhGH4gknRJQp+KYjN0QV1SqAMZa6g0WgEz/PukkUC
      vHSrXXNhlY1hEyurDE3HHg4HTCYTWeaD3Ai+78N1XZn9nSQJfN+X9W7eMsoCo21ZIG2MlKad
      b9XfDcNAmqZnLmDKUu4CUkxvgYRwK/RVLG3P00a2XeoXfV6vYY7HL5LAqsBUVdZPb3X8FYQQ
      Neq4BG0UQlEJUPPzWyuAPvGSa1tVdeyrtuyGtkHgfNIhCY3JZILdboftditddHW1fd6ClVnl
      m8+7SuponEWEYdgqeFv2DHVKIH9cHyHO2LGiaZd3uQc0uWD6GsG3cClpxTo5tHjHoxG2ngej
      Jd+dxzFGF3KyL0Udla3PddrA9334vn9zJsMtrfo+yLubLlEGfUANTe5tTPqgamziOO6VlUtB
      4jRNz8gSba5TpgSIBEE5OARd17Hb7WoLzhURhiFUVX01avUlvvRL7lnELdhBBK14ozAM8bzd
      AuyYGNZWAYgsuygzcAj0Gbimc+p2AcCR5UBJOe8oR1dl0PRN2rK82j7XPaLu/Sl57ZIkOM45
      LMuqpS42jQ9Z67quv1j7jDFMp1NZCrsJ5KLq0pT+LeBaNOihIL+aEAJ+EGDvujBPtcu7QNU0
      hGHYyhK+5sLrM3hVfuuixVM8Zr1eY7FYtPbDDon8Tqd43zTLoN6pH3WIncGPRBssomn+xnGM
      OI57FyUkPj7528MwlP/fhkHGGEMQBFJQ1wWUTdOE4zitnosIHK+JW1v/9wAtTVOst1twIaDp
      OvSexZ40XcfOcWTt/vl8XmqlXctdQVmGfapDVgn4OmYQY0xupwmv4bss3o+nKXa+D9swML6z
      nITiWOaVQRl9t0oxHw6Hi7N37836b5uL4rpub+FPBRo1TUMcx7IXthDirHhcGZ8/iiLZ24NY
      O22CytR7oOlYzvkPZ/2/BWi7wwHMMGBfMvjiew2S8XiMMAzhuu5Z7938Yr/G4jscDmfNrLsi
      H7yso4PSv79+/XoXZSDyCikTAk4QIBMCXhTJpvX3gjIWSxWq4jnU2pOyXLvi3gR/FzSVv6hj
      W5GAJ0FMGbk0xnnhS/x+aiCTpils2+48dowxrFYrbLdbZFmG0Wj0wh1EncpeW/hfy/q/pT+/
      DxTDtqFdOPiccySeh+ViIdvNcc7PhBNjrFNDlzYgy8VxnDNWSBmKuxEhBHiPpDHgu//0tWvI
      5F0o9JPd8WTrirK50iXPo3ittyz8gaNLxff9F+9RfLeyd2Xs2CebAsB1oDwD8slfUvhQ0zQ8
      Pj7i48ePSNMUz8/PcF1Xtt70PE/upq+B/Np4jSDvvePibhpCCKRRhJ9/+uls0k2nU3ieh+l0
      epXFRw23qUVknetH0zTsdjvM53M5+Rlj8MMQU8vq/GyUdNQmYHkrCCGgKgrmp5LViqJAL1lU
      VCagbcb0ayM/vo7jtJ5Lb13Yl8EwDHied/a7uvfM7wiSJJGKk5RAF4NsCPfmfD6H4zhQFEXu
      nql8+y3jgmUxp65ruEv+xT3j8nZKQsAqqRFE5WOH/rhCHHsHU5/hNtZglmWym1f+g09GIyj4
      bjFRz+H8ZM8ns+RdRMUg7Gt96PxzCCFg1ChCVVXx5csX/Pzzz29GAQDH8aWG5dSTgX5fNe5v
      jUteDIqXPTsp9j7vZlnWWab8rcstZFmGw+GANE2la5j6F1/rO7Wx+C9dt3WK4N6FPzCEAsDL
      F93v92CMncUAhkCWZbI/aR/ePWMM//jHP6BpGhhjmM/n+LrZIMsy2LaNT58+4bfffgNwdPM8
      Pj6+YDkwxkrZTvcgbJqsEsaYTNWnHRNRKslKJAFBAokERRvXQRMuUZScczmfisH4H0UJAMfG
      NGR06Loud5tUObO4pqoYVGWgv9Putak+0pDjR8+/WCwkUaRrMto9oTjv3oKwL8NFCkBkGWLP
      w4dTWVrqJua6Lv7whz8M8oDAcXA9z5P1XC4Jvnqehz/96U/SNaWqKuI4xrdv3zCdTqFpGn7+
      +Wc4jlNpJVPmb11grE2Q8xposzVljOHr16/SKvvLX/6C5+dnqKqK/X6PX375BUmS4OvXr5hM
      JnAcB//xH/9x8WLtu91WFEWW3SbWyr243oZGmqZyHlKRNPLF98lyz48R5xymaUrlX1ZMruz8
      /HfrO291XYeiKDJ+dg0CxbuPvzsuUwBCYDIey+DrbrfDbDbDbDar5Kh3vb7v+7LG0BAFoizL
      wmQyQZqmsr65eYoD0Ja0yT3C2DHJZb/f92YeDWldFa/VRgmkaQrOOf7rv/4LjDF8+vQJvu9L
      pWCaJlarFR4fH6HrOqIoGiTbuQ3PvwhyfXDOz9ha9LcfQRnQ80+nU+x2O9i2Ddu2XxAb6t6z
      aU6RAqcdQNvvOcRcpbiTYRidC9J1uccQ57x1v34XXGTS8TjG6DSJSPuSewXoL/yFOFZv3O12
      kkpm9QjWEhhj0uqh/zLGwDk/WvE4ujjG4zF830cURS+CbUUQO+Lr168vLKkugu1aaLKGGGN4
      fHyUiuCf//wngHNudxU//1L0iQ2Zpikt4rL40r27etq+M2MMy+USQRCUsle6jlv+2HwQuCsR
      YKi5GkXR1b5V1+vWuQ7rfn4k9FYAaZJgdOqCBRyt/74t+vIIwxDr9RpCCCyXy171Tsrw66+/
      Ik1T/Prrr5Lb/Ic//AGGYWA0GuHPf/4zFEXBr7/+Kn9Xhjyd1bZtPD4+IgzDVruGMvSdUHmB
      0uXaeYGZD2pT1Uzf98/6MuSPHRpdrssYw2KxAPWwBl7udIpjci9KoY9FORqNXvQ6aCOUqr55
      UVEahlFbvLHs+sTZ7wPGGEajERzH6ZWs2fYe7+iG3i0hg8MBv/z0E5I4lh+1yIvvIkCEEHAc
      R9Y4ea2m6zTB81ZmHnk/OC0Ozjlc1z1zB3WlmnWdvF0EJx2btwCzLJO7IOqilqappOUR8lmc
      Xaq9tkVbq0pRFCkQJ6dSJUO0n2yLLsHWPNqwQ4r/zrIMvu8DQCu/f/EeVc9H5AUhhKwI2jYu
      k1/LNI/6uHKIvj2fzwdXBF0s9B/Nku+LXl8gS1MwIZCcGkEsl8tShkjeP0v/XzY5gyCA53ky
      fkBMn9dC3pVVx3yh96HKimXslPz73oKxUsZOoOuSwCwKTvp3FdPnGoK/K4i1kqfyFlH8/VCL
      vExgX+LeLEOapoiiCFmWIY5jTCaTwQOlhmHIUhDELiLac5vnJgZcPk7WVJivCF3XYRiGbBXZ
      tX9H0zO+oxt6uYDiKMJiPpc+dJoMZRMhr5XJ75jfUm42G9lSkWhh98BRr2pNV/Zs9D4UpCQM
      5ZNsi3t0f7RBmetmiHe4lIBQZ1G2+VZt7k/XcRwHqqrCNE0sl8ursGTIeqe6PtqpgGOb8WaM
      SYufSjaTG6nY+KWJLmxZFrIsGzwQnN/N1H2/d0XxHZ13AFmagkcRRh8+QGHfecVBENQK7iKd
      zPd9BEGAxWJRWkq2q2VxS5C1T+9jn1phBkGAOI4lVbXKH3sJk6PuuLcSEM2ji5AsJkG1Yf9c
      kyFU9626fAN6vqaexW3QJMQZYzBNE2EYQtM06d6j9ZY/n56Lmr/Trjy/yyVWTxzHsthcU10f
      6qN9q6qufd13vwd0lrBxFOFxtZLCHzgGgNu0gBPimFi02WwghMDj42OpH3A0GrXiKN8SRYuC
      djP5YlbT6RQPDw8Iw1DWOOl7rz7H0bP0ZYzcI/LvYBgG4ji+6BqXPEcZmuI61K2s7v6O4zTS
      iYdmoJAlnyQJ1uu1ZNyVgXYmRdci/VBugaZpsG0biqLI9UuuLVr7BMaYSCv/RQAAIABJREFU
      3IEMjbqxfrf+z9FZAYgswyTX+pD6rz4+PsJ13drtn+d52O/3WCwWGI1GlR+DLJR7QZkPuG5B
      zmYzpGkK13VLt9ddrN6hn+0tgsbPtu0zw6CMqZQXuvlWkXRM13uWMWjanFs8vi4YfM1dShPG
      4zEeHh7OOoMVn58xJhVv1XzLj7OiKNA0DUEQIE1Tyewjdh/wveLoULv8H2m+3xKdXUB6LlBI
      Keq0NZzP59jv91BVVWbaApAVO8fjcStWw63rlOTRdTFWbS9nsxmCIMB6vQZwZHPQFr/oDqu7
      9qW7iLe+A8iDXEBFN1DTOxaD823RR6h0URaMHUtz5LNz+9zrUpDSpJ25bdsyOCvEMSenjJRR
      nMf556EyFsTue3h4wOFwkLkcQoiLKN5N1Nd3tEPnWafmqISKosB13TOtvlwuEYYhdrsdgO9Z
      nHXsjSLIl/j8/IyHh4ebC7G+FllRyFA2JwBsNpsXnZfaKoKu9/2RQSSBLr7jvmNcNg+Kv7uU
      kXQJFXIo5hiAMxdUEAR4fn7GYrGQO68qZlnT3GOMwbIsJEmC6XSK7XYLVVUxn897kyTeBf5w
      6DT7sjSFdaKAqaoqA0rFD2JZlszcpQXT5aMpioKPHz/i6ekJcRy/4KZfG9fYkpumiSAIztLv
      2yiCLou8uBh/RMWg67qsj9MFXeIAxThKmRKoukfZ35vYRPnie13R9tm6wLZtuK4rLfg6Jk0b
      hUjuI9M08XCqG9YWfYT+vSqIIRX2UOikAKIgwOPHj2fB3jiOX3B5y3yIXT5K3mVEAVUAso44
      Nba45mAOrQRs28Z2u4Vpmo0NzS9RAn2Of0tIkuTmOSJNO4imoGNToLgpFnCrb7nf76X7dTab
      tZr/eQFNrqTi887nc+x2u868/7Kxq5vb9yr4ASBMEgjgss6LV0AnBaDmAmtVftUq4VYn2IQ4
      liIIgkDWLJ/NZi/oZGmaIo5j+L4Pzjk0TTuLNQyJoRWAoigyRrJYLBrvDTT7OdsGk4cen2tY
      nV3ufW168KWCuIxKWXftIjumjYtpyG/AOcfhcIBhGJUl3NusB2LGFZWApmmYz+dYr9edWkuW
      yYuy31dhCPfqEGCMgWcZeJrCUFXpRr8HtFYAPI4xPQVthBCy9g/5ZMs0f5GOmP97lmWIokjW
      0aH6O/lickWoqnrmVyd2wWw2u1rizBC+ebpWPru4jQvjkglcF6AbAq+pBG6BoQwAxhj2+z3i
      OIamaTgcDlgsFhiPxxDimA/Tt8l7HpcoxsPhgNlsNggnn5QA8NID0MWVe+nY38t89KIIPMuQ
      nsbECQLMbftulEArBSCEgCKOpZ9popHwp9ZyZecUdwiccwRBIF1IlmVhPp/3nrhUV3y/3yMI
      grMy1EOAJm7TNbtslfMBzEsn+b24em4da7jVe9dZ8m3OSZIEh8MBuq5jtVrJxkNBEGC/34Nz
      /oL/3+QuqjrmEjZN1Rouu0dXXzydQ8HuNvWDusYMy57zXmDpOlIhkHCOiHNoinI3wh9oqwA4
      h22aYIzJZCNFURDHcavBjuMY+/0euq7Dtm1ZzGsIKIqCxWKBKIqushsY0hVEbiugm/Cve4a2
      CuoairF4D/rbNaFpGhzHgWEY0HUdmqZdxSVUfI+6IH0ZyJ+ed/epqiqbuxSzyeuudU0wdqzS
      2dQdrAuqdp80/5t2wHVB5z54zTFWFQUqAENVod+Z+wdoSAQTQiAOAuiMYXYq9UzWQhiGLxJt
      Km9y4m9TiYRrCAliGPi+j+12O1guQRv2SNv3KWslWXava4zPJaV8y1D2jJdabm0wmUwwm82g
      aRriUyXa9XqN/X5/1fsSqr4R5/xM2KmqKit6ll2jquzCa4AqwlYh/5x9XDj0//TNqD1k03l9
      cE/WfxGGpt2dAtCyNMXhcDi23bNt6KcaNjyOITiHxhgWp20qY0xa1+TPzAd1qiY0BUC3222n
      fICuYOxYM55YRIqiYDabDdLKsG77nd/q1oGsvqp7FP9djCF03QW8Bi302vdgjElLOm+xUhLT
      rQWAEALb7fasDg49R1vf/msLPSoDfilbqYji9xiPx3AcB4+Pj9Igob831RG7BK8dBL5naN5u
      hygMsVitEDoO2GQCVVGwHI9h27Zk3ZQ1e6EuTW1oeZqmyYYQTSyYS6FpGlarFTjn2O12sk7P
      ELiEgkaus1uzE4pbcuBtK4EyaJoGznljIbKh4fs+xuNxaZb3EKi6XpWLqg+iKMLXr1/x8ePH
      2uOKbp2u8QDqa7zdbjGbzfDlyxf89NNPg43XPVv/9wq22+0EgLOFUxzI9Xpdarlvt1tMJpPS
      RVel0X3fl+6gWyEIAsm2uNYkqeIs5xGGIcIwRJqmWK1WrXYmTVTQPLrQFIdwNbXpgnarRbnb
      7TDO9ae+NrIsk9nuy+WyszLv812vEQSOoghBEHTOzO3q7stf23VdqTjp/qPRCA8PD7W73LbX
      73ruPaBsd3ULyrMGoDFoStmX+ePIx951wY1GI+z3e4RheLOEHtu2oWka1ut1afnpIVC2OIuT
      kmqsHA6HyklJQrNMQDRZXW2tzyEonF2YT9dWAkKIswD7LUBCKz+H34KgySOOYwRB0EuBdd3F
      5ufmdDqVBuB0OkWapvj69Su2222ld6Cv8nsr3yTiHAnn0FQV6SlnQNc0jAfumVBEK/UymUxe
      NEn3PA/jXFXQLpjP5/A8r7F89JAgKp7jOFcrNd1k8XaxiPta6V0WZLF8dNVxxWO6WH/XDgwL
      IXA4HDAej2/qAqASJWXP0+ZnSPR57yRJZBvTvs/TdX6WjQPFxR4fH8/KSNfd80eEwo7JYmGS
      IElTGJqG0ZVym/I/rRQAJXvlJ0pxR1B2Tl3Ac7lcYrfb3VRDK4qCh4cHSUu9xr2J4VH2k9/K
      l1nrruvi+fkZruueXa8rC6OPgG6jBNoojFuDBEYdu+oaKAvoX3NcquIAfQRimqbY7/dYLpeD
      CNQ+RkpxHum6DsaO1VHX6zXCMKzdJfe9971CVRQojMHQNEwsC/ZAbMmiwC+itYNJiO8NHdpO
      9DzdLX9zCs4O3RKuLebzOXRdx2azuXn7ySRJYJqmTAQi5RBFET5//oynpyd8+fLl7Jy+C30I
      S/2WQq4rqHxIVfmCa4LcooRbjsulsZVrCP9Ld6wUF/zw4QMeHh6QpukLOjfnHM/Pz9hsNjK7
      +jVLxw8JVVEws22MTRP6QHXO2lyjtdN0sVjAdV3po+vygEXLl5hAt2gHVwWKC2w2m6vFBcrg
      OA6AY+CQCt6ZpgnXdaGZJkzGgIIwoabzNF5dGRhNKLI6miip9wAKwj4+Pr7K/amhOnCb/Ich
      oarqoC1Xu1CWy1B27Gg0gm3b2Gw2YIzh4eEBURRhOp3CsizZhtZ13bMKo2/pOxQx9G6mzVi0
      lnqUwdf2wlWgYm+vKfwJFBcgNtM1diRZlsHzPLnT0HUdcRxLi8fzPBiGgcfHR3AhwAwDnuPg
      y7dvmIxGiJMEXhQhS1P8VNFCcwjUKYFb01abIITAZrMZzIrtc/88Q+NexqUNqIn70OySS5UA
      UE4aIC8CMfk+fPggx348Hstd4K1dgD8K2G63E21LJ+z3e9i2Dd/3MRqNWjGAiKERRRGSJEGa
      plgul3ehAAi0K9F1vXdguwrPz8+YTqdScIdhiK9fvyIIgiPtDcfYRMQ5mKrCPE1kIQQi34du
      mlA1DTxJMDpVSb2Egtf2uOJ2/hIrd2g66G63kz0nXgNCCDw/P0sq76U7gLpzixTQvvA8D3Ec
      Q1VVjMfjq62/Jip0W2RZBsdx5NpxHAeTyeSFASSEgOd54JzDtm1YlvWmFPJro5M5OZlM4DgO
      hBCtJlCSJHKxUrXPa/Na+4Axhvl8jsPhgP1+P1iJaaK65ncW4/EYq9UKX758QRTHUC0LGWMw
      CywWxhisnDJSNQ0H35d1lK7hlqmjkRZ3AXV012siiiIcDgfZiOiW9xZCyAq2uq5L4X8pmr7l
      EO8YRdEgVUebcMlOgL5nmqZwHAfz+VwK/Dp66GQykUacoig3TwZ8y+ikAIgNRP9fB/ogj4+P
      byJSzxjDdDpFGIbYbreDuBc8zytddJPJRBbFi3EU7m2eTzNNbLZbPJyu2XZxdRGUbV1BxYSV
      4rHXgmmaGI1GCMMQvu9DURSMRqOr1ZgSQiAIAkRRBCEETNOUlXCHRNm3HOp9hiz01gZFY6Gr
      EjgcDpjP51BVtZUyIYOImIXAcY3dk5fhNVE39p0dym2DR67r3pybfSkYO/Y/VRQF6/X6IlcV
      Fc0rvn8cx9g5DniWwYsimB06JKmahjhNsXOcs/pMQPNWu4+1XKUEqu51q13BarWS3wc4Zpe7
      rivdG3UWILHZ8h3l0jSVeSl5NgsZO7Ztl5YtH5pBVqZ4hxhH3/dfhSlVfJ9L3ZZ1846uP5/P
      kaYpXNeVGfe/ZzSNebeewFkGNwgwn0xqj6POXrcs9zAkTNOUDKHlctkr8Lrb7V5sW9M0xf/7
      /Bm6bcOaTuEfDlB1HXqHhA/DNOF5Hth+j3luUbdRBG2VQN1xXbfz1wBjx0Jrz8/PeHx8xHQ6
      lXkKnudhv99LAV+kCVJQkX7PGEOSJFgul2fzlZ6/7zjUvXtbd0/X8SubA/ny7a+BLkqAMYYw
      DGXjpC4GRX6+UdP5KIqkK+kd5dC6WDHOfg92+jhUfRE4MoRM04RhGDgcDmCMXb3g27Whqioe
      Hh6w2WwwmUw6BRwdx4Ft2y92D4wdK6syxrBzXcw6Wicp50g5h2FZiE69GMrcBkNTROm6RXRx
      QVVdoy+oKVEQBHKnqeaC5GWuyrKcBnq2ooC85g6mjXXb5/5lCsBxnNb9fS+9f5vnapozhmH0
      rhBQNDpM05TkE8/z5Lzo2pj+raJqnCn/SFVVaBvHwZRzTFq4a7wwBITAYrE4O5ZYPiT4Xoud
      MTQURcHj4yMOh4Os7V6cZIwdWz2qqgpN0xAEgQz+FjstKYqC5UkxBmEoz28LVdOgnDjcURRh
      s93K6+VRtxtoK4zz79kUHH4tJWBZFp6fnzE6tSrNP1PblptdGFJ9A7VtxujScSk7P7/Qh6Bk
      Xgoah6rxIHpvmcXed/c6n89lvo1hGOCcY7/fv4pL7LUhhJAVHJIkOdbP0i0Lju+D4Rg4qUJG
      TY1LevZqmgZN0wanUN4L6lxZWZYhTVNwzmV9GMuyZPvL/A4rH1i2TBNRloF1jDGQcBvN5/j2
      +XOpAhgKeSHQ1d9dZ+UOJVSIAUKVJfuAFDTFthRFAef8xTFhGGI0GoFzLt1IAEqPVVVVNojJ
      GwBNu6n8cZe6iYg336fQ2zVRtgsjhGF4Rpkuom8cK69QVFVFmqZXYdHdO6hcuhDfW3RqwNGy
      TAoTuYgkSaDpOrQ7pHG+JkhoFAOPRdaF7/uygiQAzKZTfP72DXrBem0LcbpHnTXTFLDtygxq
      izb+76GUgGVZWK/XL3YBbcEYw9///vezHcOf//xnWeuH3n29XsM8tUVVVRWe58mExnxCmK7r
      +Pz5M37++WepHIgumm8DSdfuolibdizEWPJ9H5Zl1ZZXfm3kx5aQJMmL71iVV9A0DnU7Vl3X
      sdvtfjexAcaYnItFmaABgKKqjX63JEmQpSlGP6iVf22YponD4SAVgKqqmE0mcHxfJn91AWMM
      48UCbhRhXiPo66hzXVC18Kq28rdSAowd6buXUHcZY/jjH/8ITdPw22+/yWKBURTBMAx8+vRJ
      Hkc0RepFrGkanp6ewDnHcrmE53l4enqCEAKr1QpJkmC/34Mxhk+fPoFzDs/zEAQBVFWVv8uP
      TR3VsQ7/n70365WkW/O7/mvFHBk57NxTVb3jefucPurGxt3nwsLYyI3olgyWZQkjS241/hq0
      uOIOiVskkPgGCGOBkIHmwoPaHCw4bURjut3n9HmHqrdq186dQ2TGPK3FRcaKisydQ0ROe6j4
      SaWq2jsyIjKGZ631DP9HiAg+lcyX5WfTsizYtg3DMJAkycqCtV2SEJY/Y1kWkiTBZDKBrusw
      DANBEEBRlIWJ3GMdPLchVrOiZ7uYpKyqW6FZbvjDPM95HV4QQNa0k4unPRdE5onrusUfcA6W
      ZTs/aDRfzrItGSvlWWcdv3cVdt3XNjdHHURtwGg0QhRF957RKscSLrwoiiDLMjqdDl69egXf
      9xHm8Zosy/Du3TsYhlFU1gptp5cvX0JVVXQ6Hei6jqurqyIx4sWLF0W8IggCBEGAFy9eFKmK
      286z6j2L4/jJZd6Vv5ckScUg3mq14DhO0Xt81fZlVl27TfddURScnZ0hTVNMJpNiYH/KiO+b
      pikYY5BlGaqqbswAo7qiIA5DSJqGUSmzp0wcx4gZA8+bFDTUh5B5oYqYZSiKAk3ToJD7qYp1
      UDQNs9KDe4hg4qaBZNNn6g4whxwEdF0vZty2bWM8HiPLB1cnDBHlPvlVMMZwe3uL4XCIV69e
      QZIkjMdj3N3dFfIlWZbhl7/85T0ftSgefPv2bSG1IGZcjDG4rovBYADf94uBSWQtCX9s+c8y
      Va9nkiQrfefHzGY6FOXvSCkthBpF/GI4HCKKooXt17F8Pbf9abfbRT2JaZrFz5fddceaQFX5
      TnUQWmsiTrUs47+MbObLrUyWEacphqMRLs7PF07I9Twoqoo0ip5Nhs9DQCm9FxtoWxYmnrez
      yJusKPCCAO3ScnnXAFeV4OKhOaQ7iFJaJDKImR2hFExRECUJUlWFuWJGRCnFJ598UrwwnueB
      ELLgx5ckCV988QUGg8HCLJtSii+//BJJkuD169f44Q9/WCzBOeewbRs/+tGPMJvN1s4wN7nv
      qlwXIZ0gDNmq/TwFd8Yq92Kr1Sq66BFCCgmQVZ/dJd4lPqMoSrEyp5TC9328evVq7ex5+XhV
      XKPLCGE+YbBFttYuxafCzy8+X3VyJf3+7//+f9YyTbizGWRdR5JlQJYtGKo4jhFEEZIgmGev
      RFHhU2rYD1VV4Xoe6IrsqiqIz0icL9yzKsbj2LOaVcda9fPy34eCUgpd1+cNYygFB5AyBsY5
      tJKfV2T9mKa5oNg6Ho/hOE4xqDDG0G630Wq1Cn0rRVGQZRlubm4wm83Q7/ehqio457i9vYVh
      GMiyDKPRCJzzQhNLJA1kWbZw3KrXrAznvGilKMvyQQ39Q68eys+GpmmwbRuMsZ1kLbZ9F/G8
      GIYBwzAW7rPQnmKMFUqqy/dmef/i9yLWU/49YwyTyQRxHIMxVrgel2MWYpDZFlMT6sIiCaG8
      j63XRaiBRlGEsW0DioI0jnHe7cLMg5Oj0QjjvIOWquughCAKAnz1xReN3sYBcD0PQ9uGkQu9
      1YVzjtT3cZXLRe+SObFMlSBuHcovzDFyzNcxHo+hmiaSPFbS1nWoS6stMWMShlgsn5dZfhnF
      Z8pZQEJmYtPkSHxOHHedC1A0DdJ1fW2KdhzH8H2/KLxcN5jsuyJ8LIiYjChuW5Zb2bSa2uVY
      cRwjjuMicCzk3BVFuXdPxD0PwxBRFCFNU2iaVpyvWOULZdOy7SSEFHElIb3PGCuek01KxaLe
      Y5eV3oIcdBzHeHt7C7PdRhQEaBsGKCGYBQFACCRZhpTPVLM0Bc0yXD0RsbfHzt1wiIhzqDuK
      doVBAJ4kaOcPSZZnpey6Sls3+9zVb3+KVcYqxOxNURSIs6YHCFxvuwb7ftdyUeVoNCoye4Ig
      KGZ8ItAnjMmme1PbMDzid1o0AyJkXp9iWdbKme++34FzXkjfC/eKcIGLdNtycx1R+CmUV8U5
      JUmCKIqK3upZlq2tzi5PLsoTpclkUkhclCca5d7Ude9xlmWLWkCEECRxjMD3YbRaCLMMgevC
      7HRWFrQkmMtD9D6SfNpjkiYJEsZ2HgB0wwDXdcTCQEkS3g0GsAwDVqt1sEYy61LrdmXb8nZf
      hByAqqp4vCZtERHIE8bGNE2Mx2MAc2G6Tqez0nX2MRh/IK+oz+MdnHPMZjN4nnfwfh4iGwn4
      0LNYXEvhzhPXqlxIOJvN7tlLEV9K07Qw4mU2TSw4nxezzWazBcFCAEVMpM49FvECQpaawhNC
      oOk6OGOIowggBFavt1InRZJlKKqKmeeBPYEA02Pn4uIClDEEjoM0jnfah3BdUEohyTK0Vgsx
      gPd3dyvdDLvOyneJG6x6QBnnGLkuZkGA9EjpxWKGdgjWvZzbMnmqIq6pUNIVGIaBfr+P8/Pz
      oqfG8vU/1ID82I2/oDwAdrtd9Ho9xHG80Gdb/DnUd1q+z+X9ChspVAHK7h3P80Apxd3dXSFc
      WPeZ8X2/yI4SNSjlc9oGIaSQNBfXSJbl+x3BZrMZZmEIQinSJIGxZUSNowiGoqCfi5w17A7n
      80rOb7/7Dv2XLw8WIOWMIZzN8Oknn6w03qseorrpnOW/17E8kYjTFHYuQ9K3LEhHSCpIkgS+
      7x+k6rM8kKz7zrveM7H9dDotmietYpdBpu7s8Kki+gSL1N1+v493794V1cXiOmRZVriNDp3I
      kiQJ4jheGMBt2y6OuS6LaRucc7iuW6wi6graCZfhsmLBPb9Au92GH4YI43ir8Qfm8sR+EEAP
      ArRqaNs33IcQUizxvekUnuPg8tWrSg1jNu6XUhBZRhzH0HX9oC95+WEuNwyqglg5tjTtKMYf
      QCEv7Pt+IVF+ioynOtsK47TN+AP1Z/qVs0GesOEXSJJUBGZFaqxI5RQ+fFmWwRhDGIaYzWYH
      bS1aTgooX3fR3F5kiO0CIaRIP3Zddy7kVtEuiBXJqj4Z9946Qgj6Z2dgWQZUPFlZUTDNs4Qa
      9oOQecFYGscgOFzTEd2yMJzNcDMYwA+Ce8Gyustm4Xu9HQzw7v17vL25wd1wWFTNrvtMGU2W
      0TNNGDX6IdSl1Wot6PpsOr9tHNNI+r4PRVH2Nv51XQsPFZw/NqKqWMzwhesEQNFFrtvtIt7R
      3boOEW8qI5rZHwqRGVSFLMugKMra7VcOIYosz1/Kig+GJMuI0hQzx0HnBDOs545pGPjy88+R
      pilux+NaDWM2oRkGOOcYOQ7IdIpuq1VLOoBzjjiO5yX6SYIsn/Gouj4PsKoq7OkUZ3ne9jYI
      IfdSMg+N6BsAzDM3jB10l5ap6vKqs68wDDcu65cN+r7H/hjf0VW5+lmWwXGchZXhPrN0wzDg
      um4h0Chm7rPZbGVXuTJVEiJErr9o8ymCuYJyarGIf63L5gPWDACEEBiahiDLKrsfNF3HzPdh
      rRBwaqiHKHxRVRVnuZiYapp7u4LEviVJQpKmGLsuVFW955dcfmDE0pYxhvF4jMFggBcvX8JQ
      FEwdB6Hvw+r1wAFIhgEvV6Msf/4xsI/kRhX2Mar7BtSPdaznDKUU5+fnSNMU4/EYpmlC13X4
      vg/O+ULAtipC3gP4cJ1FdtJ0Oi2KwoRsvNjWcZzCaItJihDoFPvJsqz4mZCTkUsFpMLNxTkv
      JElW2eLyBOZeEFgwGo8RZFmttMQsTaEAOD9AQ/WGD6Rpim9ev0a73z9I0IoxhjRJoKgqnNEI
      Ru52IISAEoKLfr94UDnnmDkO7NkMYAwSpUjSFFSSAEmCnseJyvc7dF18VgpiPxSczxtgiBdC
      VOvus79NtQD7BIAnkwlUVS2Ch+Wg5aFm/g99Px47juMUVeGiuC4Mw2I1W7XQynXdImOnPBgI
      d265+jfLMsiyDF3XoWlaUTNACClST0V9wbLsfN34zqrnae2Ust1uw7u7Ay/lum5DygONnudt
      bC7TsAN8rhx6iAGAUgo1n/Wb3S4kSYIzncK0LIBSvB0MoOSuE8/zwCgFyx9+KsswWq35g5s/
      oMs8dFpwmqZwHKfIehANXR7rM8k5x9nZGYIgwHg8BiGkKPAqb7MrjeGvRtkdSsi87a2u67Bt
      u3jv2u128Xz1+/2FayuMuZiJi57iIs4i3DMiBVPEe8r3Vszsq9yzTa6ddT+/N2lZtwIAAHs6
      hZ+mkFdEjzeRBgFeXl01D94BsW0bd+PxwVYBZTjnSHNRKipJ4HmXM8YYlHwCwBkDWXPcNI5B
      SstN33Hw6vLyXjDs2IiHezKZLJTeH3L/x1gBrEL0N1h1nLoc8z1cdw2eI6KdpGj/Kvzvy/0c
      dF0vFGUVRcH5+XmxwhNupVUsxwBWuWK3UX4+q3x+4xvSabfh3N4W8g9VYZQudL9q2J9utwsn
      CMAZgz0eQzOMSmm6VSCELASa43wJqpb8+OuMfxxFGN3coNXtopMbLL3Vgud5Jx0AOOdFvrV4
      QY+FcAWUl9Z1Dd+6l3TddrtyaoO8KZb01JFluXAhCvdiWfep/Fx4nod2uw1VVTEejxFFEYIg
      WAg2LwdodzH4m6jyXG58SyilaJtmrWAwMHcFjafToiFBw34kSYLBYICMc/iTCUxNKypnWZbh
      2//z/4J53seLX/3VgxxPZAttI00SKJyDElLEEYD5c+O6Lnq93smMgKhuPGYP3LIPePnfu+5r
      1Usq8rafmvFfZpeB8akgArmrfu55XqFRJBI6RAqyyDiaTCZI0xSXl5cHe1437Wfd77b6Ejrt
      NrKaubKSJEExTby9vW06iB0ASimiJIGi6zDbbUCWCx/+n/0vfwDzH/5PuPsH/wNGt7fItvR2
      roLI+NkE5xzf/NG/xPd/8qewul3QpQkCw/2G6cckTdPihTym0dk0Y9uV5dz9OkU+6ziF4X0s
      2V2PDSH8tvysGIYBSZIwmUyKyuAgCADUb2Szzde/7WeCrQMApRSWYSDd0jN4GUIImsfjMEiS
      hPN86amqKvy8IXkax4j/6P+GAuDFZIrBf/lf4+7mZu/jccbmhYA5SakbkyBNEiQ/+5dIfX9B
      m0SgmSZG43GRhXNsyrLMx2RZSuMYhlZVVQRLxXoNTwORMu37/srfm6aJs7OzufZXXjFcjinV
      Mfq7DggCxtj2AQAAup0OpJq9awPPg6Jp+ObNG3ieV/lzDavRVBWz0QggBJ1+H1EY4ps/+RNc
      u/MHjQKArqN1gJ6wQuhPoJRSgTljGL99iz//r/4bXH73PZIomhe8IPP+AAAgAElEQVSCrSiy
      YYqC28kEX79+jbc3Nwtt/Q6JCM6dqkHRoYz/piwO4SawbbvoO7zPfhtOg6jkF6qgm5AkqVgl
      V7Wtu6wK1pEkyeYYgIAQgk67jbHrLhiDTai6XqQbvh8M8NWXXzYP5h5omoZep4PA82C0WuCM
      4Y//8T/Bb+W/5wDIb/4lWEeU5uaM4f/5wz+E8S9+hqvhXJ44/Wf/HD+XJPz4t/76wrYilRGy
      DCV3Vw3GY8iShIwxkHwbiRBcnJ8Xg0NZq6j8vGzytydJgl6vt1LrZOP34Xyhj2/VgOxgMMB4
      MoEsy3j18uVBtWQEoicuIQS2bVf2p5/qHWtWJ+sRxVxRFMH3fRBCVmpwHVKpti5hGCIIgmoD
      ADB/MTGdVn4QRUpgueH8RU0Fu4YPEEJwfX2Nd+/eIUsSDN/d4K/ejhY07tM9dG62wTnHN//7
      T/HiH/1vUErv/lUQ4ebdZreTcJloedZSuTaRM4Z3gwGc6RSaac4zeCidx5HybB5CSCGHu6r3
      RB1tFBGM83IZ8+HdHVqWhc8+/XQhMAsAGWNwZjMwPi8ki5MEGWOIkwRGu43Q9zHNBcWORR1D
      20ywHheikMx1XUiSdC9oXG7mckrCMESSJDg7O6s+ABBC0LUsTMOwljaNqutQOIfnuuimKZQj
      a788Z0Tz8ne3t2CUoBxkIQDU/+9PYf/Vv4KzFy922n+WZciSZCH9E5j7+9//4s9B/+dF4w8A
      w5YBW9ld+oNQCq3VKgaH8rkknCNKU7A0BQeQ+D6SJIGqKDAMo5jxR1FUpBwLzfM4TeH5Pmi+
      EuH5TItSCicIoOerKKvfB2MMN3d3oJivJnjeQ5hzDqPVAiEECWOQNA0yADkv1TcsC6HrIs7P
      6VhYlgXbttc2fQdOb/yrVMV+7AOSqBOwLAuTyQRXS7VRiqLA8zyEYQglf6bLvxcVw6KPtPiZ
      KDhbVh2tSpIkxcBTyxpbloWp64JXrFQTEEKgaNr8IhxQFU/su3xx6l4QsfQXObnL+1juF1tl
      X+XslzqfrwIhBIokwWy14EkUavZhvx3Hw+T7t2sHgCyXcFh371Zph3DGELku3H/4P+Iyva+l
      c+EFiJ3VAa99EOchAUC5/B1AxDmmwyF0RZlL+yYJbt6/x/X1NbwgQJplIJTCyjsvJZyDyDJA
      CFLGoOf68ESSoJfSV7M0BWdsZX3FqhUGIQSKrsMPgr0HgHXPrXClid6yx1xt1GWVi27V7z5W
      RFtPAIU7rwylFP1+v3BFep53r45CVVX4vl9k5onKdlFns0utVbvdhm3b0PIJTS3Oul2MHefe
      LHET6/Kd90WU+I9GIwBAv9+HYRi1jG2aprBtG5eXlxgOhzg/Py9Ew2RZxs3NDXRdR7fb3brf
      MAzh+z7Ozs6KASUMQ3DOd24EsQqr1YLj+7jTNHT8oPh5LFGYG7RuRC1H1YwZzjne/vzncP7R
      H+Bq6hQ/ZwCGn74Ec1xcTR3IVmsuHX6ql54Q6JY1f6Y4h6Hr8wZGlMLIVRg/bLood7yuoA2Y
      Xx+j5go1S1OoueT0IbtPCcR7o2kaPM9bOQA8BmN7iHNY9X7sut99ajT23ZdoCr9N3lsg7u86
      G7F8zznnME0TnucVKqPl89wG5/yDTHalT5QwdB3ZaASuaZUviEgJPXSWBiEE7969w1dffVXk
      T5flUOUVFcziIlFKi+49ooio1+stbJtlWVHBJyL75ZQtsQ8xS4uiCGmaFtWowLwZhHiJsywr
      zmuXqL3ANE20Wy3wl9fgv/wWBPOZsfOrv4Jf//KLrZ/P0hR0ixsvSxL82T/9ZzD/yR/iKlnM
      548JwdXf+pv4/qf/B2ZRjL/wt/8WojiunCBwKAghxaBjPKDOz3AyQRwEaOfnYJrmgotqX3ge
      g8jyTLy6tQiHNIbH4JgB5X0GlV3Oi3Ne9HaoI7UuqJKIIGyJaFhfrkBe933LP/c8r1iZ1B4A
      CCHottvwc0NWFVmWkSbJQfO1xRdzHAedTqcYQW9vb6EoCmazGb766iu8ffu26Az0+vVrfPXV
      V3j9+nXh8qGUIssyvHv3Dp999lmxb6EeKZoxy7KMb775pkj1ImTeZ1MUfmiaVqQj2raNX/mV
      XylS+Lrd7sJ5/eAHP9jrwe91OiC5wfUpwdDQ8cm/9+9unOEKFFXdeB845xjd3kL5p38IK7lf
      zEU5B49j/JXf+11QSYJhmnh3e/usKz/XoRkGNMOA2enAm80gKwpmuZzwIdpQlhGTDDEjrGP8
      xb8f0/05Vgxhn/dqkyuuCsJNd2wZHFFYZuUrYWDzYCdspWgpKYQGd7LEbctCEgTbNyxBJQlE
      VeE4zvaNK5JlGb766isEQYBf/OIXmE6nhca3GJziOF5w3TDGkCQJkiTBq1evFgIzy77/6XQK
      XdeLIA4hBEEQ4LPPPkOv1ysGHU3Tiu/V6/VweXmJi4sLzPIuaWK10O/3i5Z0+2rTq6qKX/+7
      fwdvry8w7nWB3/4tdK+uFrbhnOPmzZuVn3fzjK5lkijCH//0p/h/f/YzmEmGVY+9Z+i4+sGX
      aLXb0POZRNs0ER8xC+mxQwhBq9MpAnd1DMAmo0MIQZIkRa2DSCd8CON4SKqcxzHOdV3txT4r
      8jKKoiAMw6Okd5YNfd0Wk2I7IUUh2Cklh1KKXruNWRBAq9FhiRMC1/fRypvGHKKQhlKKFy9e
      4MWLF/jFL34BXdcxGAxwfX1dlFmXtwc+pA1uunhZliEMQwwGA3A+b9Z+fX0NM09V5Jzj9evX
      uMxVL8ut5cpLbvFv13UxmUxweXkJ13X3+t6C65cv8e/8p/8J4jjGeDpFlBvg8j3p9HrI0hT2
      3R3OX74svls5k0vMDAPPw5//q3+F4bff4fpPfw5tzfVRohiz8QQXJR2TdrsNL69efUyzzFNC
      CEEUBNANA/Z0isuLi3vb+L4Px3VxcX5euC1FExFx7UTsSDQB1zStcEH6+ftThU3VoQ91j449
      AG3a/zp38DbqXCtZltHpdDCdTueTglbrIK7AsvGfTCbQdb3I5Nn0Pcq/K9e8FOe7y8mIwjDO
      OYIkgVTxCxJCQFQVr9++RceyoGva3hrtr1+/hmEYSJKkWA6laQrP8+D7Ps7Pz0EIwd3dHYC5
      8RMZFaPRCFEU3XOFEELgOA6ur68LQbPvvvvuXv9QxljhAhIjvsj5HY/HhQtIDATivJYHpn3Q
      dX3+gBGCd2/f4o//1z/Ar/61v4Z2/wxGq4VWu43AdTEdjnDx8iXSNEUcRbh7/x6vPv8ccRji
      9T//KayX1/jlt9/B+fkv8IOM4zpKVs7+AYBLFO+//RbXn36yEOO46PfxfjiEmvslP0asfBWQ
      ZRmCMMR4PEa320UUhuh2u7BnM1BJwu1gAEoIOp0OXNctDL94TpIkKZQnp9MphsNh0Qqw6gCw
      ySf8EOxr/OsY9yqfP1bmkijiy7KssAf72jlC5v0JhPum3E2sKkEQFK0qi/1u6gewDcbYXO8F
      gFxzH5wxBK6Ls3YbnU5np4svDHcQBAvKoyIXXFXVotrOL7UpFEFYkVVB88IjkbdbnollWVb8
      W5IkJEmyEAwWfWbFakQElkWQpeyDE4ZfnNehxdLsyQQ/+8//C7T/xu/gi5/8ZJ4l5fv45r/7
      70Fef49AliATAgJA+sGX4FkG+ms/xts/+zOQuxG6owk+94KNfkEOYCRTJAAu/uO/h7/wl/9y
      8TtCCDzfx3g2g/aRDgKcc4xvb5HFMWRVhWFZ4HkHNlVVoeo6sjSF0WohDAJIjN1rGC6SCYSh
      L7/o0+m0aDFY55wED3lPdhkAqtQbbDvWuu+86wBQ5xqmaQrf9+8Z3jpMp9PCDlmWtTWGKtJG
      RYBYnO90Or0XlyK3wyFv7xiw4Jzj+7dvEUQRrF6vduMYzjlYmoIlCa4vLrYGlR/Lg/yY+dd/
      9Ef45X/7D2B89imIJIN+8y0uZ+7K2TwHkOS/kPn2gFAKYPTX/238xd/5bcRRhMsXLxZcaeJh
      i+MYd+MxOKW10oWfA5xzJHGMLE2hGUbxsqZhCG82m7veCAEoBWcMn1xf33vuRWqy+LmYkFiW
      BTfv41w3yPgYMoEO5f7ZZrh3PU7da1NlexG72bUVqeu64Jyj1WpV/l6e5yGOY8iyXMQaRU2B
      seSyl6MkgZamUHeo0GWMAZKE7gpfZxUIIZAUBVSS8P7uDp+8eLFxtF6V0dAMBIv8+Cc/wey7
      1zD+4B9DAta6cZD/Tq3xrhAA1sUFzksz1uV7AswDYa+urxFFEcbTKeI0hayqRXex5wwh8+Y6
      ope2KL4LfB9JmiKKY1iWBVWSIOcrwWUkScL5kmyK4ziYTCZot9tFj9q65/VQrAu8HopD7OsY
      14eQuY7TPn2o4zhGr9e7956Vc/mXEc9HeZUYx/HKWITMsXsPV0op6JIRjqOo9otOKAUkCa7n
      wcpL78scKkL/MUAIwW/8zf8A/+K717j4139+0H1TAP53r+8dr0z5PqmqipdXV+CYL0vDKEKc
      JIjzfHbdMDZWJj9Vyt9HFN+ppjkvXotjvFiSBKjiimi320Xc6vIB2m0uI2pfxIpv03bCjaOq
      6so2ips49nu/67NX5XMi1XrXtHdx7cpusCRJMMmFCNfVGsiyfC/RZN3zQgkApaKQ1iqWb08d
      naCFz2kaBsNhrfSpZmBYjapp+It///cwPjtsHnpECS5/8hv3fl5+UJfhnAOcwzQM9Hs9vLy6
      wpevXuHzFy8gZdlBGtg8BbQ8aFel4fe6wG2r1UKYB5YfA+PxGLZtF20RlzNMRNxMVKwyxoqk
      CDGAVBXxe0zUiRVYlrXz/RLPQTllnHMOwzDQ7/fXppLXEUekHIC7Y/42IQRaHlAt/2yXUZWQ
      eXl/8BHnkh+Ss/NzvPr7vwtXPVA1KoDpj3+EH//mb27cropxE5WtlxcX4Et1Gs8ZRVEwc13Y
      FfT9lweB2WxWlP1Pp1MkNRs0HRNC5m0QR6MRbm9vIcsyZFlGHMe4vb0tDKDwQ1NKkaYpBoMB
      hsPhyor9bcc7xKqxnKBRdZ91j7tPCijnHJZlFf1UROJKUcRF6cp3J0mSysellBBYewTqdF1f
      6B61D7KiYDgeb8xf3pbK1fCBH/zar0H6938HyQFelpmq4Ef/4d/eupyt+yJfnp8jyfWSnjuE
      Uih5zci275tlGYbDIcbjMd7d3OD29rZ44VVVxbfffgvbtk905puJ4xiDwQC9Xg+SJMG27aKP
      9fn5eeGLZoxhPB4XGXOXl5cwTRPv3r3baSWw7lnbZtA3rlZ3ON42CCEYDoc7fU4oB4ii0vJg
      ua6eo47aAiWEgO74xRhj0DUN/EDLeEIIIEmItvQgXq7c+xiMxy4QQvBv/s5vY/aX/o2923MG
      P/gCn3z+eeXjbqJ871RVRUvTkNbsO/1UMSwLUZZhYttrVz6MMbx9+xaqqkJWFGi6juvra3S7
      XVxeXuKLL77AD3/4w6PLDdTBsizIsgzTNJFlGWazGS4uLiBJ0sqgdZZluLu7g+u6hZ4WsDoe
      svynzu+rsGxLVk009zH+QiZmV4SfP4qihYFyVUMZ13Xh+37lGBHlfK65XhUhpSCKXSilkCkt
      qlD3RTdNfPPtt3tLJTTMkRUFv/F7v4vZ7/wWbn/9x3j78hqDXgcTWYJHCWLcj+MswwHI3ep5
      zHVfyP7ZGRRCDraSfMwQQmC228gkCbfDIWaOU0gHcD7XtboZDCDrOqaui+FohLNuF51Op5CB
      EKqjDx0I3oSoiVk1EyWE4ObmBq9evcLLly/vbXPI2F4dw73Ju1AeGOqeGyFkr97YYlAVcSCB
      uMZl0jStlHVUxGHaul6rSYtYXsRxDC1XBL3o9/Hu9hZJHM+j3ntkdlBKYbTbcF13q5jWc8se
      ORZWu41/6z/6OwBQFMV5rgvPceAN7uCMx4iHIySDOxDPh+Q4UMIIKufQ8voAueZss3xvqiy3
      L/p9vLm5gW5ZH8V9pZIEtdVCmCTw4xjJeIwkimCdncHIq+zd6RTXV1cn63VcF5HhIoK9wIfA
      b7fbxddff40gCBDHcdHMRrgwKKV4+/YtgA+9FtYZ4HWrg208ludI1HPscj6e5+H29hadTgem
      aRZuH87nktC2bRcFriL4W8sNW7cSOIqitUu6MAwRxzH8JIGyR1yBcw4Whnh5fV38f9OyrKkH
      OAyczxtTBEEA3/PgjkZw74aI7Ck++83fwKdf/eCox4+iCIPxGESSICnKk8wQ2YmS+4FlGaIw
      hEQpzns9aI+sdqJslJcDjWmaFlX2YqIoflam/DuxDyGjfkjqXrc6shl19z2ZTApZmarEcQzH
      cTDzPBBKcd7tLqwAxIqxrE82nU7vydpvOv9aA0AYhsWsfxOj8Rgx55U1glbhz2b48tNPAaB4
      oJZpBoDTIYTJ9ilpr4LQV7odjWAe+VgPCeccrm1D1bS5i02W4U6n82K7Vgvdbhf6ifsrbGOb
      gawak9tU7HlI9nH/bNtfXXvjOA4Mw4DjOJhOp/jiiy82FnO9f/8etm3DaLchKwo8x4HZauFV
      SfGX8w+9B8RAOplMNrYOXT7/rb4fznnRyKRKDjMw9+mOJ5N50GKHGYww+Oui3Ms0xv/4iL60
      x25kTSmFYRhH7bH7GEiiCN12ey4jTghYFKHXbqPX69Xqs1EmjmPYtg3GOXRNg2EYewUfq7Cq
      EvwpUeecq9qjVdsRMtcCe//+faH1JMsyPv3004X7HYYhJEkq9M2oJIFxjk6/D3AOz/dhlWQh
      ZFleWEkJuflNbsPyuW180kTVHjDP1qhTANE/O4PreXB8H7KmzfVPaqDW7DvccHw6nQ7G43Gh
      sHosfN9HxthuUrVPBEXTEPo+XlxdFQVUu15TMRO0p1No7TZSzyu63J2COkZ03+fmkM/dMQYs
      xhjevXuH8/PzQndnNpthMBgUHQYJIfD9eR/tN2/eFM2hXNfFmzdv0G63F4K7RkkU0M0HAAEh
      c+lwAEXXuDr3XRYlw5IkFZV5orWiGABkWUYYhkXAR4xewi0jOmqVG6BLkjRfzhoGoiwDr3Hj
      fNdFp0afgYbTQCmFaZoIguCoKYiO50F9RCmOx4AQMs/0cRxc7jmgcs7x/fff4+ziAmmSQFNV
      nPV6R2nBWj5m+e+6n39odjX+21YBSZLA931cXFwUdRxhGBb2kRBS9AsH5gOG53lFt0HGOaIk
      wdnVFcIggL5k7LPcM1JG9B/2PA8XNXTZCCGQLcsqlvRBECw0IF4X8K2D67rIOK/VekyWZRgf
      mYrkU0H0UzgWnu8j4RzqIzIWx4JKEjLOMRqPcbEk/lYHQgj6/T6CMITeasF3XfRX+IEPldte
      119+KB7TALKMOLfJdAqqqhgOh7i7u5sX7+UJLMKtrek6wPl8lWsYGNo2CGOQFAWKJEHRdWSc
      w1ih8xMGwYJdppSi1Wqhncvq162qX1hlG4ZRFBskSXJPOnQXCJlr6tMaGR2qruPt+/f48rPP
      Ct+WSH1atf+G0yCyhHZpdl11/1PH2SuD7KkhyTIYIXg/GODq4mKnWTshBOfn53h/dweOecXx
      cDi812fgVDz2d/KQrh/xXV3Xhev74LKMyPfhxvE8U0pVEUcRQAg0wwABIGsarE4HJE+ZFxh5
      9s6m68cxdxv98Ic/vPeddlmN3XOzipFl10DUMq1WC6PptJZIHCEEsqYVEqarlp4Np2dT1sIh
      cBwH5COM/VBJAjQNN4MBXu6Y9y9y66kkIc0yaHmbyU0VtvuybUK2btK2jk3b77PfMvvYj/I5
      MMYwnc2QZtlc7lzTIBkGKOdon50hiWOkSQK91YKeJHMXu6qulQCviqKqYPl9FcHeXb8TIeQ0
      cTaJc6RJUqthjIhuC+oWgywXkTTsj+h+dmhEAGwWBFA/0tgPlSQohoHheFw7JiDywXmeDq1q
      GrJccvvQz3/V96+col33c1UGq30GgV1YPofBcAiq66CyvOASFZXex0I3DIR5y9Byu9ldOUma
      wKtXrxA6Ti3/FMuyrQ3nVxWILZdsH7Ks/GPnEDGhZXjuA3ei6KM1/gIqSWCShNFkUuuZZYxh
      PJ0WrrMoDHdus1qHdTo86wx2FTZ9713rffapE1r+XoQQTKdTUE17kAptWVVBFQWu6+Ls7Ayd
      TmevQPzJvgFnDHYNRTzNNOE6zvb9bjH4zUBwGI61orKnU0Sc1+4p/VyRFQVx7l7Y9LwyxpCm
      KVzXxd1otJAtAkLw+s2bYsK1aj/Heh82PR+rBoxjBqIPSfk8vSCYN7F6IDTDgOf7Ra1Ancyf
      ZU72LSzLQqvG0ohSCj9PqdpGFQPfGP/9EFXghyRNU7hhuHMToeeKquvwkwSj8XjlqjnLMty8
      f483797BTRLIprkwgFq9Hqx2+ygz1HVG/JjV+Pu+u7sOdutWNGfdLpIo2uuc9kFSFHBK8f33
      3y/0/K0L5/w0MQBCCBRZRhAEtT6nGQYG4zFeULqQnrqKbf7ORi5iP4IgqKQxUhXGGF6/fg2j
      Qtn6x4ia99l4PxxCV9V5qjbniKIIQRRB0nW01wychBBIqoq7u7sHywQ6BpvUOoHDrE6r7CNJ
      EgSuC/UBs9V000Sw1PaxbrwFOOEKQFGU2heMEAK91YI9my387FRaIg0fOEQGUBzHmE6nYIxh
      MplAMU240yn4R9IRrC5UkqCaJmIAw8kEY8dBJknQ2+2tqyZZVRFvkXl/yAlRXbfsNuO/7md1
      fl/1PG5vb8EPtL9dobIMs9PBdDaDbdtFhTFQ776edABId2hjRyUJKQDX84pUt2YQOC2H0P8R
      wd6RbSPLMqR5bYhKKZKPpBnMrsiyDKvbhWlZ9eppnoie0vJgsC6mt8+7vW3f61i2M3Ecw2y3
      0T2yHEoVNMNACmBi23jz5g0muf5aHU42AMQ100DLKJqGieNgPJkU/THLg8EyTcHYYfE8b0GG
      dhdcz0NGKSRVxc3dHSLGQLIMRFGgPDLVy+dA6PsHddkdg1UGeJ1BXjbguxzjEJPDMIqQHSG9
      dhdoXltAZRme5+HNmzeQJAm+71eeIJ9sABA6QbtACIFqGAiyDDd3d3jz9m2hp7FuNVA+1mO4
      WU+ZOj1GV5FlGSaOA0XTYLRa0C0LqqYhTBKohtHcnyOQJQnkFauFYwdsj0ld+1Fl0KhzHWaz
      GdwoOmqef20IKSSjZUXB119/jdvb2wWX0CZOl8u05+gryqo7/T6UVgs3gwHCMKw8CDTshu/7
      e1eFM8aApXtEJQlWt/tou109ZTjnMPP2kY+RQ7hytm1TV69olQ0R/3ccB2/evIEbx3M5h0d2
      XWVFwcWrV+CY1+pknOPrr7+G67pbU4BP9vZpun4QX6+Y+SumidvxGGneK7MZBA5HFEUYj8cY
      jUbgnO/dBMbzvCbV84QkUYSsRp/v50xVaYlVvxcV6sJ9+ZhdlYqqQjdNUFlG7+ICIATffvcd
      3r17t/YzJ0sDBQB6oFGzPGNUdR3fvH6NV1dXR5Unfu5wzouiIsYYVFVF70BywowxOL4PzbIO
      cKYNVaCUPmih0jJVjPC+hWm7Tv5WfS6KIkwdB1GaQtV1KJaFpxBO711coN3rgeaNZAilxSpg
      +XuKn51sAGCM4dALJ0IIWp0ORnljZGGwVgWWHtuy7aHhfN7pzcubh8iyjE6nc/A+vE/V3/yU
      kRUFruMgSZJ7fXtPzUOtwOsel5C5avHYtudy5IaBpzillHJ3bf/6Gv5sBsJ5oeG1ahA42QAg
      SRLkA89KqCTN9VOyDNPpFP1+H8DqAaAZBD602vR9H3EcQ5IktFqtoxuJxs9/YggBobS2Nvxz
      oo5IGiHzdo3j2QyKYUB9Bs9rHEWY5ZpSk/EYvV4Pn3/++b3tTjYAEEKgKcpRUqgUTYPv++iX
      jtX4/j/AGEMQBEVXN9FA4hQQQlZmozQcGUpxd3eH6+vrB10FPOS7uOxiWsfMceCGIVTTfDaT
      RM7YXGFWUeB73loV35O2XZVlGWEcQz1wMIUQAkgSZo6DTrtdzPaXReGey82tAmMMYRgWmVKG
      YaDf7z/INdBUFX6aFsvThuMjKwrUFcb3Id6DQw8Cu3yHddsHQQD3GSrRGpY1l6uQZSRxvDZG
      etI3sm1ZcO7ujrJvRdMQhCHaG4KNz3UQEEHcOI6RJAmyLEMYhjg7O8PZ2dnJvzPnvDiPOEkQ
      xTHSLGsGgBOSpinCMIT1TIPvh3iX07w+5Tn2n+aMQTdNGIpStKJcxUnfSEIIKD4UFvEV+eH7
      EERR0UXsuSH891mWzaUU0rT4NyEEsixDVVXoug5JkuDl0hmnNP6czxuTOL4PIkngebU2VRRo
      TRroSdFNE6PZrFCLfGiqrALqrhTKg0AVMcgyjDGMxuNnW4gYhSE0RYEfx8g4h+t5CKPoXu/p
      kw4AlFJc9vtwPQ+e60I2jIOlh3LGQHMXk5K3w7u3zSNfAXDOEYYhkiQpRu2yDj+lFJRSSJIE
      TdMgSdJaOQzTNDEej6GfqCBIaP3EAORn+lI9JQghaLfbB8/q2pV1lfmHTP2sIwEzsW1QXX9U
      6bKHRDdNhJ4HSZbR6ffBsmylhPXJ1+SqqqKvqui023h/dwdo2kFcA0lepTfN/V7L4mXLcYHH
      ZqB834fv+zAMA2YejFpn3KtACIGiKEiSZG8htyokSYIwTZ+dL/WpQiVpnnjxyIqXHvq9I4TA
      cRwkAJRHMjgeA0IIDMsCy0UXASBasRp8sOFPkiRcX14iCYK9ZSIAFCXammHAzQXjlhFulGN1
      Q9qFIAiKitvz83O0Wi3Isgwpf4H3odVqwV3SDD8WcRyDNj7+R4coBHoMz/u6ittD7WvTNsId
      GoQhZkHwqKt6D0lZPZbIMpxSl0Xhkn8wJErRsSxMh0PYw+FBHlJCCMI43uj7FAPBpuDIsYnj
      GMPhEFmWod/vo9VqHXx2JAaR9ASyAF4Y1pIqbjg+SZbBtu2HPg0A1Q191e3q9BMQRV7D0Wge
      9P1IV6mUUvhhuPizBzqXgk67ja++/BL9TgfhIWarhEDWdZyQBSoAACAASURBVIxGo62b1m1K
      cSiyLMNsNsP5+Tksyzrqsrjdbh99FRAEAaIkefDlfcMiiqah1+stBErLfz8m9nl2Nr3HnHNM
      bBvvh0NwRXm2Qd8qyKoKvvTdH8WaXWSxKHnwc9/KUSpJiAhBGIYwDGPjA1+uEj5F1gznHJPJ
      5GTpmbIsF6udfa+rGLgyxoo/AMAAaM+oiOa5oOk6HM9bSAV97IkQwG6tDddh2zZiANqe/Sye
      E+Vn4MFWAMuZAFmW4frqCmkY7n3jRSxg7LoYjsf3jieOucyxVwOcc8xms5NnZ7RaraKRzq5w
      zjEYDhERAqYoIJoG2TAgG8ZHPat6zBBKgSec5VJ3Qra8red5CNIUcpOC/AFCihRx4AEHAM7n
      Da5t28ZwOCxcIVbeDHtfxCDAZBmD4bD42TJpmsLzvEI35ZgDgKjKPXVmhqZpiON45+8mUjxZ
      noYKzNNukyh6lO6EhhKUIqzZJvDUiPdynbGvG/AFgOl0iqnnQftI/f3r0AwDM8cp3tuTu4BE
      1epkMgGl9J7scLfbhfv+/cGqRimlSPNB4PrysjgH8bdt2+h2u5hMJrAsC5IkIQxDZFkGzueN
      0MuiWoSQIlOnzgxFiLAJwbpTYxgGgiBYWxK+LT02ThJI+cDFOUcSx3MV0WZ29aiRJAlxHEN/
      5FkvIkV7nftnVZHYqmc1jmPMHAcZpdBME2hWpvcQRaSyLJ9+AHAcB4wxdDodaJq2cgbZ0nVE
      B/BZC2RFQRBFyBgrCs8IIWCMFXnyvV5vHsyMIhiGAVmWC+NfdtcwxuC6bjFAiH2JAi3GGNI0
      RavVWpjp+75/lEyfqhiGgcFgsHIAWOf6Ks/MSEljnhACVdfRmP7Hj6wocKZTdErif08lDrDJ
      4C+ff5ZlsKdTZAAkXT9YgelzI8syJKWEjZMMAHEcFzIGcRzj/Py8MMCrsCwLzmgEfQ+NjoW2
      Z5SCcY7RaITLi4vi4YqiCL1erwiQlg20GHyWffWU0nsdskQMQ+yHUorxeFzk8wttnvOlMuxT
      IgTh4jjeWBgmUmPFoAYAQRgiYwxS81I9PXKhxGWj/xgHgWWjX/X8kiTByLYh6zqkJxzzOAWB
      5+HVy5dFm9eTDACz2azQqOl2uxs1Pzjn89n3HsfjnCPwPIS+D7Pdhm4Y0HQdfhAsGEDh4tkX
      kcVU5uzsDOPxGEouxlROx3soLMvCZDJZGIiESy4MQ0xd94M2E+fFiibDPMun4Wki9KKeArvo
      Ab2/vYXe6TxbWYdDQjiHruvF/08yABBC7qWirctJFg+qKss7z1I4Y8iSBEkUwUkSkH6/CAZN
      plNc5isQRVHgeV7hijrkDEmSJPT7/WJAewwIN1WapsXKJBCGn1IoS6mcnHNIAOQnYjwaViMr
      CrIsezS6QNuouhIQBZ1xHENrkhG2wjmHkWuICY5umZIkuXcSmwpShOHVNQ1uHEPeQdmTShJa
      nQ7SNAVLU0xHI1y8fDl/ETDPxjFNE1EU3VMOPeTS+LG9cCxvEnFzewsiSfPZviRBWZPG+VRm
      jQ2boZKEJB/0yzxGN5CgynlFUYTXr18jfUIrnIckS1NYS1lRRx8AoihaCDxWrUZUFQVZENwb
      ADjnSKIIamkZswoqSTi7vJxHvJPkw/KQECR56meSJDg7O9s5lVH4+0VA+JTSC3UIwxCu5yGI
      Y0iqCvXI1ccNjwvxjJYpiyM+pWehnHghyzK63S5izhsZkgrEQQBtqT/EQZ1mqzR2TNOE7/vF
      76vuR1VV8KWH1s8lDaTcPVRxZ/N6AMaQxDEkWZ5Xs2YZzs7ONp7DNiil+P7774t0UM/z4DjO
      WhXPTVkMx5qBz2Yz3Nk2MkmC1mpBVpQn9cI37I+sKIg31AI8RC1HXRkWzjlubm7wzTffwJ5O
      MRyNcDseg+g6jGfa9OaQcM5hqOo9d/TBB4BlwjBcCDpUhRACiVJkaVrsVzdNZFkGx7YrPzhi
      2ZtE0bwBDQBJ0+5l8pSpuu8sy9ButzEYDCDLclHQRiktVhgiE4hzDt/3i4wh3/chSVLhi3dd
      F5RSyPngxhiD53l7uZF838fU9+eVuk2A7OOFEMw878GK9srGftdq+9vBAFxV0b64QEIpuKpC
      M81m5l8R0SO4+H9uj1ZahVU3rMqf5X0Ac6GwVk0dDvFZiRCkSYIsd6kQQjC+va3VRUwYPt00
      C7cRK+Xwrzruuv+v2r7b7cL3fdze3qLX60GSJLx+/RqEENi2jdlshul0irdv34Ixhp///Odw
      XRez2Qy2bSMMQ9ze3kKWZXz77beQJAlff/01HMdBFEW4ubnZOVNp5rqNTEMDAEDVdcRxvPCz
      8vP9mCu60zRFwhgUVQXJ3a7NM10PngfL379/jzAMEeXdExcsyzrDLtw6ZfdOlVG9LK+wLfh7
      74TziDWQV/PmKwFJkmDkAwrLsrXG/BBUma1kWYYXL15gPB6j2+0WKZWcc2iaVsjxnp2dodfr
      wTRNXFxc4OzsDFmWYTKZQNf1oo5AtLS8vLxEv99HmqY7P+zsifl3G46HZhgYr5CGfoyDAOcc
      rutiNB7j7u4Oo9GomcjsCZVlZITADQLcDoe4vb2FpmkfBoBVRnqdAay6jJvNZrAsa6dlH+cc
      lmVBERVreXd7zhhC10WWpiCUFnGBbQSeh8B1EQZBpbTM5euwaTvRixf4UBWsKApM08SrV68W
      tl9+iIUbSFVVfPLJJ0VW0iFexqYopqFgg0z6Qw8CZVuTJAne3tzASxJwRcHdaAQ/SRpXz54Q
      QqCbJs6urmCdnUHSddyNx/MsoF19c5u2F9kw6/rzVqVlGLA9D2pe3k0kCYxzTEcjnF1eQtN1
      ZEmyVZNGN80ig2jTTKKcZVDOlBA/WwUhZMFXb1kWhsMhJEkq2jsKxHYicHx+fo7vvvsOca6t
      Y5rmgsunrvtHrNgc10WcplBVtZk5NQAAJEVBFEWYzWYwTXNhIvRYsoGmsxm0drs4l6tPP33g
      M3qeiMA5mUwm/JCzTkGWZfA8b2OwtQqcc8xcF8PRCKqiQDEMyCWjlmXZvGp1y6w+yzKwNEWQ
      F369urpaOMYqllUK14m/ifRPkQ4qNPiFy6p8nOXUOyEfkabpvRdSHFO4hzado9jXxLbhhyFk
      w3h0dQgND08chgimU3zxxRcrVTi3KXPuQlW7whjDzWAAvaRb1HBcCotz6KWf53lrlSfrQAhB
      x7LguS66nc5cylSWgTwQVNXISZIEzhgCzwOtkXpWZSWwnGNdrgOoUhMgjPvytttWZeKc4jiG
      63kIkwRUUe7l+jY0CFRNA89XmcsxuYdeAYzHY8iPXLX0uXGUQrAsywq50UNACIGmqmCMwTRN
      TKZTyJoGRVUh5bLMm2BZBkIpZEVB/+oKSRRVLo1fNv7lc3oIhJ80jCJEcYwky8AphaKqUBrt
      84ZtEAJO6VzcrzQIAA8/EKSMQdkhZbxhd44yAAiXyDbqtCkUfQNEhkDoeYhcF3q7DW1LhgAH
      IH6raBqoJGE8meDy4gLAdgGqssumvN2pXpQipTYMMXNdcEJAZRlUVaE+Ar9tw9NC1XXYto3z
      B+pNsQ65cVkelCqT3AdTKYuiCNPpFL1eD0qF6lTxRSil+OTVq8If/+7mBmkcL8QF1n1WQAi5
      lxNdR4WwvHSu0xSmDpzP5aqFa4dzDiLLUHT9wZfqDU8bKkkIfB+O4yyINJZ5iKCwRCniNN1J
      /6thNx4sT9D3fVxcXCCOY0wmk4XfZVmG8XgM13VBCEGQyzgDi0aXEIKry0uYioIsDBHllbbb
      oJIEssI9VSU7aPn/u1Y2bjqO63l4d3uL4WyGVJKgmia0VguqpjXGv+EgaK0W3Lzz3WOh3W4j
      CcOHPo1nQxUXd2EF6+pwb2M52yVNU8RxDMMwCnkISiksy0IURZhMJlBy2VrGGM7OzjAajQo3
      kWipKDp0CR0fRVFw1uuhxzmiOMbdZFJJuz4Kw5UuqLorAbH98oxpF0MtsiA4pWsVOhsaDgGl
      FIquYzSZ4Pry8lEUgcmy3NSunJijuYAopbBtuyjbTpIEhmHAdV2kabogxKaVNKqFwiYAXOQ+
      eoHwaYVhiNFoBEVRij6+IlDcMU24cQxlS12AYVnzXqkrgk7rBoFVy+J18YFyQK2qIb8bDkGX
      9LobGo4FlSQkeZrxqnTlU8MYa3r4nhj50C4M4EO/Xcuyipx4USHrOM5KbaAqGUPiITUMA6Zp
      Ik1TOHmHe9Fxq9NuIxoOtwZAFFWF5/trheoOtSKq+jKNxmNkktTMgBpOiiTL9yTbgYdJdsiy
      DLwZAPZGqCRUSbDZawWw6cFgjBWyBmVD3D5gkYeiKOj1eoiiCLZt4+zsDIQQXJyf42YwgLTC
      FRQFAeIwRLvXQySCqzUeul1mR+XPRFGE0WQCBhSNq1ke4G2kmhtOjaQoCPIGSctUrYQ/FJTS
      QrG3YTeyLEOWplAq1lPUmm6Wg6/bHoZld8ihVxnl/Wl5cFQEiimlOO/1wKMIcRAsbKvq+lxX
      hBAohgF7Ot3rPLZdB3GtGGO4Gw5xZ9uQDAOKYUDSdUi6DsUw5kqHjfFvODGEECSMrS1YPMS7
      W/W5liQJ9MCxyI8NSimUGskilQeAOsYpiqKi8XqZY97YbreL6XRaZDXouo7ry0ucWRZi3wfL
      f16Wl6aUIlpqWVmFbd+jPEhyzhEEAd4PBmCKUqga1hlMGxqOiaQo99KiHwpVUZpVwA5wzpHk
      97COPTmKwzksLSlPNZoTQtDv9zEejxdmM61WC91WC1HeEENWFLSEPtGOs41lvZRV/tIgCDAc
      jXBzd4ex60JqsnoaHimSLCNOkkfxfCqStFb3qmE9WZrCvrsrJrdV2RoD2OWhyLJsQWukzDEz
      DCRJwvn5OWzbhizLaOeqgp1OB4xzhHlXHCEctyzWtolV2T/2dIokTZFxDrL0O0gSZFXdmo3U
      0PDgEIL0kdQDmKaJ2XDYFIPVxJvN0G23aw+eaweAXY10kiQr3T9l9h0EVqlqCiil6Pf78DwP
      rusWQWdN02APh1B0fcEobxNbW/V/xhgGoxGoqoLq+sNV0zU0HIi01Mf70NTZb1UZmYZFdF2H
      piiIag4AB7ddfp5aeSrXz7rjtFqteSu53Mdv6Do+efECMueI8yIwkgtjRWsaZi/76YU8w91o
      BKIoTZOKhucDIZWUa+tSxQ6U3zGWew8a6pHEMcIwrC3AuXCl9wlKimyBNE233sBDjfDbGtmI
      wLDQ5ldkGZfn50jCEKObG7Asg6yqmMxmC+dWvgbltpa2bWPqefNirQMpnTY0PAZkVUXwADIM
      y7YgiuNmYlUTdzpFFIYIo6j2tVuQgqjKKoObpimiKKqUIbP8/11WC+sqcJf/b1kWxuMxWq1W
      IT9xfXmJqaYh8n0Y7TaSNIVt21BVFUYpWBvHMYa2DXCOOIrAOEd3qTr5qcI5R5okAOdQVBUc
      AEvT+cDWLME/OqgkIQgCtA/YS6LKe728TRiGkBr/f20+efkSju/XfndrTWNX3VDGGCaTCVRV
      haZpa5cgqwaYVd2HVmXU7PIgCVRVLbKDZFmGLMsgADRFganrcKMIRJTEpymmgwH4/OAguRAb
      IQTKUqvGp06WppAYg2EYCHwfVJKgyzL8IEDGObSlVpYNzx+GeQxPWWOA10mhHJIkX5U3VEfY
      JbrD+1p5AFilcwMAjuOg0+nU9j2tMy7HqspVFAW2bUOSJKRpisvLSwBAOpkgluVi6aS0Wiv3
      +ZyMP5DfQ85hmSYs0wQHECcJ4iRBsiYm0vC8UXUdM8dZ2SdgU+LFoUiSpJGC2AFJlhHHMaIk
      gVmzKZScloqiqhjxsvEXRVdVPscYA8d8hNdPvMRjeaXj+fl5cc7ie3Q7HbwbDgvZiOcy62WM
      IYkiyIqyMl6hqCqyNMXbwQBAfj0IgWYYMJu2fB8nhCDO1Xg3TXhWdclbtRKo+y7Z02nTEWwH
      OGOYui4kTZuv7Jd6iwsF5VXIInDrui4uLy9r3TTXddc2lFjGy9sXipM6pZGZzWZFOujyhaCU
      Pss0TiE/EQUBzJL+UhJFhZ9QtNRsaBCohoGZ46DX7d773aa42z4QQuA4DqAoTfxpB3iWQVYU
      +J63UOcEzK/tplonWVVVKIqCKIpqGf84jrfuXMA4L4y/OKk6bAoUb1uSRlFU+P6XieMYU8cB
      nljWQRJF8wAu5i/sqntACIGxQnVViEQ1eisNqyCUIopjeJ63UrV3lTDcPs+SeLf9KILUzP5r
      kyYJWJKAKAoIpdDquoCAer15gXnGj+/76PV6lbYnhMBQ1UJ9Uz3RrDNJEniet9B7AJjXKvhB
      gDBNoZvm0+qryzmQZfj0+hoAMHMcuK4LWrPq+Lm4uhrus696p6LrcIIAAFYOAuVjrKPKscU2
      WZYhZQxPaxr2OMiSBLquI0xTtDodZIxBrmHLKTCfJa/TxQfu32zXddFdsURcexBCYCgKLF2H
      KsuF4t+hVELX7cNxnEIiGpgPXGEYYjybIaP0Sbk/OOfIkgRpEOA8730g+h8oa/z8DR8vbE9p
      B03XMXXdWtICdeqIytsETepnbbI0nU/c88w9MfvfqRDsUM1P1iH2LVOK1ol8/5zzohuZIEkS
      vH37FrqiQJMk6IoCbzZ7lOqDnHMkYYjQdRE6DlgYwpRlXF9eLkhtJEmCuELxXcPHAyFk7wkB
      JwSqac5dpBWOt8+KUm4E4GqTxDGyNAUlBGEY1nb9CGRgniLpeR60Csb50M0hDlkVXN7nqkHN
      MAx89dVXxTE9z8NFr4fhZAKz2z25WyTLMiRRBJ6P5IqigDGGLElAAfTabei6vvG8fN+HuuPN
      b2jYBM3br6ZpWqm+Z9cAsaqqyGYzoMk+q4yeZy1mWQa6x2AviyDqthFY3NRd84DXfa7q/uqs
      Ujbts7yPKIrQ7/chyzKGs9nOo+jGc8nTMVmWQZJlSMLIpylkQnDd70OSJCRJgigMIakqjG63
      8oyeUookio5y7g1Pl6RCX+wqiKyg/lIcbZnlgaDOILBOObhhO5IkoXdxsbN8hgxsz7JZ/v9T
      cDcwxor8/ziOwTlHHMeglCLN/WciOKzrOhTHqR0M30aaJECS4LzbhaqqCMNwPmIrCqRWC2qp
      BaSmqtBqvrCEEOimianvH+ycG54Hh5IhJ5QirNk0qXaAmJCdqlgb5uzj7is+uUlPRzRfl3M3
      Rd1AQ3mfu7pZ6s4QCCFotVqFa4tSCl3XIeXL2mXlvIt+Hzd3d1AMo9IgIHz0nPN5ACtPiRWr
      qSQMYek6OnnAFpi7oKqee9WuYyzLmgBaw7wROCEbZ4Ii6aLuJIdQijhND5K9t1ISBrvJGHzs
      sCyD77owWq2dB4HiU5IkYTqdotVq3csrdxynaL4eRVGtDKCHRNO0e3ENxhh830e/VO7OOYcs
      y3h5eYnb4RB8Q4EUYwxxEECmFOe5BEYYhsgYgx+GYHma64vz87X5+av+vYoqg57ULJ8bsN8s
      cBuKps0nUr3eSq0uoPoEbdUksGmLuhtpksAyDERJsv8A0Ol0kGUZptMpOp1OYbziOC6aruu6
      vjFdtArH1BKpQpqmUBTlXjBbdAd7eXWF4XiMOAzvNVeOwhCUMVyfn0MuNa4QudJCSXGTzlHV
      775tO/H7JEkQet68GXQjotUArA3a7mpoCaUI89VumUO+y4353w3XdWGIFrc7IAMfRm9KKbrd
      LmzbRq/XK4IzVW7yuhnArp89lGz0MqqqzsvOl45dHhAu+n14vg/P95HmjWMAoGuac+mLHb/r
      LhXQm0iSBIPhEBxA4LpQVoh4NXx87OqiXQchBJKiwA+Ce2Jj61YEmxA2JQxDxHEMVVWbFcAO
      qLp+b5JaFzIej/nyA5OmKTzPQ7fbRZZl8H2/0NJZR90BYBdjeShXh0ht26RjVF4ZHOLhPMYy
      dzAcgpf0+5uXqOFocI4sDHF1cVGrjeo6ptMpwixDHEXgAGRFaTLZHoCVUwWhnRNFUTFCPyc0
      TUMcx0iS5N5sadnwbxqI6rhzjmGc2YZzbPj4SJNknoiwJsibpWmRrFAbQpDlypKHeN6COIZi
      GJCb3P8HZW06gKqqSNMUWZZVKhCryy6z+UM8eOK4lmXBtm3EcVzpvPaRrjiagW6Cvw0l5FwQ
      bB2SLO9m/HOIJOHrr7/eW/wtCAKwNe+EaN/acBrWPi1BEEBV1copkbuwT9xgXwghuLi4gL8i
      h74cF1hn9KsWrx2zZiI90GysoaEKsiwjSVMkNesCyhpBaZpiPJtB1fXCdck5h313BxYEkNMU
      yQP0Jv5YWRstyrIMcRwv5K4/dAbPMWYGNM9w2De7adV+jwljDKyZKTWcEEIpzi8uoGlapXdx
      la2YzmYL7UY550iiCFEYYhTHkCiFYRhICJlLlzcTnKOy1krpug7Xde/pe5Rnxcdaqq3a77GO
      1el0EAQBwqVZx77HO/Yy9pjXv6FhJYQgybK9Jh6iM2D5+WWM4fqzz9A5O0O320W304GlaYjD
      sHFzHpm1KwDDMO61T1zFvv7Ax0Cv10MYhkUNxLHTXveFc47heAwtF4RqaDgVUl74aNRcMTPG
      EAQBwDlmoxFACGRFgdXtQjfNudx5lqHf6xWrcUVRMHEcKE120EayNEWaptB28GJsTBg+pjGr
      kx56qJnuJqNt5Fra0+kU3VwZdBeX1yncZFEUIQNqNX5oaDgEoiq46gCQpinGto0kyyCrKrgk
      oXd5OdfmiiIAQJAXMkqSBLlUpKmqKjRZRpZlIE+sa98pEb1C+A41ARstyLH7BKw63kOiKAos
      y8J0OsVsNitE5Or8AY7rnonjGLbjQHpmqbkNTwRCkPJ5H/FtZFmG4WQCoqrQWi1IigI5f24J
      IcWMVVFVuLYNS9MgLU1qDF1H6HmNK2gDsqLAbLd3sp+VBoDnFvjdhCzL6PV6sCwLaZrCtu1i
      MKjLMc7dcRzIW3oENDQcE8UwMJxMtg4CYRiCARtTU4G5AbM6HZgrXJqapqHf683jAQ0HZ+Od
      OXWgsXyshw5yUkphmubKwWBTGlyVFNJdSZIECedN9k/Dg0IIgWoYGNv2xu2iOJ6ne1aAyvLa
      98rQdVDGHmXnvqdOEQNwHKcwWJqmIQzDwjcO7O4OqtsI5pSZRVURg4FpmsiyDGH4/7d3p8uN
      48gWgA9AcNNuu2pqbvTEff8nuzFtWxslkuIC4P6QqJZtLdRO2eeLcHR3mS3RLjsBAonMBeLV
      umUYhnB3lGP+3ETn3Fl7kiSwXPenJpASUAqTKMJTv7/196tc9b44pMhzZKtqo9tYa1HkOZLF
      Ar3nZ6aG7lA19apS0BdpiuDABroYjUbWcRzMZrN1bZwsy9Y19DddOuPnlssY1xhYtNZI0xTF
      6gh+q9X6UFqi+vp2/bPOfVbXlmWJ/76/ww1DLv9QbYskWbcPvIY8TRF6HgYbFSmNMRhPJiiw
      3DQ+JI4i+I6Df/3+vfe6aDZDZu1VS18/supAXW9HKfptFLDcWHQcZx3w6zYuqeveAetaTxWO
      46wHzapoXlWKt9VqrRvEnHOuoWow8z4aQZ1Z+Y9+nmsXWPPCEIssw9twuFw5yDLkZQk/DOHW
      CELWWiySBP1fv778bH+uNNrtdDB/f+cAsIMQAmGnAyEEJsMh2p3OwQFYGWMQx/GHBimXuJGm
      uNU+guM464qp1WBQnaOoVIOBUgq9Xq9W1y9jDP779gbheWfVcaGf6Ra/i+7qZHBSFJBKIThy
      ouIodbAnObBc2vCkhDXm4MbyTxW0Wohns2XTKqUODwDVTn6SJPB9f2eQebRTp/e8383B4LPx
      eIwwDGvfX5ZlMFLCY/CnBhNCnNSQSAgBz/fR/dTUZNfvx6Dfx+tohKDd5l7ADp7vw/31q9by
      m/I8D0EQIMsyxHGMsiwhpUSv17tqPZtrzkyaOFhZazGZTNDtdg827Nj83qSLBWf+9K05Si2X
      Tlc/57uWTIUQcF0XT90uJknC/gE7HDMQSwDrbJZer4fn52d0u11MJpNaj2X3tq1NXdNUwb/T
      6UApVfsejTFIs4xrnvStKdddp4DWKTsThiFkA3/Pm6ZOGvrWKb7jOOj3+x9aJzbRNXPuL8Va
      i+l0ik6nszNddNPm7H86ncJhwwz65qSUKMuy1u9v9STgKcXTwQcksxmS+Xzv93XnGk+17PC5
      SmYdtwjETQz220ynU7RarQ/Bv04dpDzPkWoNyeUf+u6EQHpknKn6ldNuQgjAmL2nqPcu8vf7
      fcRxvCzGtGfNfrPhQ+XW5aKbqAr+/ior4pjDYKPJpNYmDtHDs/b42bwQPBl8gHQc/H55gfmU
      jfjhmkMvUi0FzWazkzZuT+2mdajg2imODcLniKIIQRCc1E95Mp1CeF6j0mnpMVWnaJvu2IST
      oij4dHyAH4YYj8fYF0UOfter4mjAckZ7bAC+1KBxqlsG/cpsNkOVXXXs+5ZliZgbv3QhWZpe
      vTvduYSUsEf8nlhrUWrNNNADhBBQrRa8PdlStX8yut0ugiBAFEXrOkHXCKyXDv77PneNr2E+
      n0MphSAIjvpaqnuYTKd7/8KIjhG0Wg8xmZBKIVv1BzgkThJIlkOvxXGcvU9KR00NfN/HYDDY
      +xd1TmB9lLX9Xebz+TqltlLntO+Hzd+y5NIP/TiO69baCJ7P55ilKVSNjDo6TAHHVfosiqJW
      OuMuu4LbNYL/MfV2zhXHMYQQW2ua76p8+vnPjDHQDz4IEp1CCIGsKHZWzs2yDLM4hgb4hHxB
      62fDzxk8uziOU6sb0Da3DP7HOPf94ziGtXZdGO5U0yhin1/6mYSA9DyMp1M8DwYQQqAoCszn
      c2RFAazaRbIN6mVtXRzcNxhIKU86IXzL2v+3lCTJycF/88nAGINFnkNxdkNXUFWpbTJHKeiy
      xP+9vcERAhACXhDAdV08fqRopoM/EdsGA8dxzl4K+g7BP01TaK13Fn47xngyYatHuirzAAcL
      HaWWm9bVKX/+PlzVUc9T1dpct9tddxCrs+n7SEHtvQfcPgAAEApJREFU89ez694XiwWKorhI
      8C+KAouyZIlbuhqlVOOD/werJwC6rpOeCaWUGAwGGA6Hyx8sKdFut6GU+rKh/EjBv64sy5Dn
      OXqfStjus68F5vtoBI9r/3RluiwBIVhdltZOXhR0HAeDwWC5PmcthsMhfv36BaBe0N/X/afJ
      8jzHYrFAv98/+v/dNgiMx2NIdvqiG3iE8wB0W2etOVSbSuICs4pHCIBFUSBJkpOCf2VzoEvT
      FDl7nBLRnShg9/LENlU9Hq01jDGQUsJ13YsE8GPOI1ya1nq9tLNPVRbjEu8XxTFUEFzk9YiI
      jrWeetYZBKrg6HkepJQQQqzLQlQDw7kDwa0HgSzLkK7qpQRBsPUg1yVV359pFC2D/wM8+RDR
      9/Rh7WFXAM/zfNlgeDXT32zE4rousiyD53lIkgStVushBoGqS5fneej3+zdZgqreY7FYoLAW
      isGfiO7o4OLzYrFAsLFM8TkwCyHgeR5c18X7cIhksYC7sR9grYVSCp1Op1Hr/FEUodfr3Swj
      YvPA1ySKoJj1Q0R39mUAqJ4C8jxHURRot9sfPreNtRbGWrhhCCkluqsDTdX1ZVkiSRIYY2oP
      BHWeAoqiQJqmEEKg3W5vLXtrrUVRFCiKAsYYGGPgui48z7t58C+KAuPZDA4PfNGNWWtRZBk8
      7jnRhq1PAFW2izHmwwCwjwVgAIgtQVspBaUUyrLEeDxed8mq7DtAtm0QqNbtlVLodruw1mI8
      HuP5+fnLfkS1zLO5b3HL+ujV11aWJd4nE7hhyOBPNyeEYIc5+kK8vr5aa+26hHFZlpjP53h6
      evoSrPfNyAutMc8ySCHQXwW5XdfP53NordHr9Q6Wjd58jcVigTRN4fs+wk+BVGuNKIrWryel
      RBzHGAwGH5awbqm6P601/n5/h9duM/gTUWOoclV/fjweA1iuUb+8vAAAer0e3t7e0O/3P9S4
      36YqY2xXH/vCXKfTWT8NdLvdWm0TqzTNp6enrZ93HOfD54pVadl7B39jzDL4X2BznIjoksRo
      NLK7qgRWs/jpdIpOp7NzzVwIgbQokOY5BIB+qwVZM5MniqJ1dVFrLRzHQbvdRlmW8H0fUkpo
      rTEej9Hv92ut21cZPoNVWdlbq97TWovX9/flmj/r/NCNPULxN7qvWtVAjTFQSq0D+ragGrgu
      8rKE3igVXWcjt6qns7lckiQJXNfFdDoFsFz6+f37d+21+9lsdreso83g/z4cwvF9Bn+6i0cp
      r0L3U6sGgeM4ew95CSEgAHSDANM0hTZmPfOom9O/WWq6qrC5L/10lzzP16eTb20z+A9HI1jX
      5QyM7oYlRuiQWlPTVquF8Xi89QzA5qDgSAklJZI8/1IR9NhSE58/6ijLEnEcH92cpW4J6EOv
      URlPJtBS8heQiBqt1gDguu46jfPgCwoBbQySPIc25uSB4FhlWWI2mx1dq+cSPQw2rx2ORigA
      qBob20RE91R7cbrb7SKKog8BfdvMvO376AQB8rJElKbr6669HhlF0dGbvoeuPbas9XA0gpaS
      wZ+IHkLtAUAIgV6vhyiKDl7nKwXfdSG31Py/1kBQHfKqq+61+677EvwdB84d9h6IiE5xVHpK
      tbF6qGSytRaB6za289Cxy1Dbrv+84Wsch2v+1Fha63vfAjWQAo5f795Mx9w1o5dCoOV5Nyvv
      fM39her1P0uSBLM4huP7zPahRuMhRNrm6Cmr7/soigK7Do9t+rwE9F0URYHxdAo4DlQYsqY/
      NZ6UEros+ZRKHxz90+B5HqIoOlga4juy1mI8mSDXGi6budADuUUiBj2eDwOAXrV43BfW7tm2
      8Z7mcYwojuEFAVxm+dCDscbAaA0wSYE2KAAw1iLNc+RliV4YwtlTuqAsy5uWU763PM8xmk4h
      lILfanHWTw9JOg487lPRJ2pRFNB5vizBEAQH1+2n0+m6Wuh3lyQJJnEMn+v8RPQNKSUljDEo
      tYZYZe18Vi35FEUB13W3loS4p2u8/2Q6RVqWy1k/EdE3pJTjIPB9ZGW5d+lnPp9/aRH5HVlr
      MZpMUABsn0dE39r6HEBwYHMoy7KdSz/7KoU+Eq013oZDSN+Hy3Q5IvrmDkY5ay1ms9lZM/9H
      yBwqigLv4zHUqrE9EdF3t3cAqIK/lPLs1oqHnhDuOUAsFgsMp1ME7TY3e4nox1hPda21MJ+C
      cJIkkFKuu2tds9zCqa977v1keY73yYTBn4h+HAksg/+iKJBkGYy167aOZVmitSULZl+m0C2d
      G/zLssRwPEbY6TD407dmjIGu0c+DfhYFYHkITGtYaxGlKezqE9bam66H33KvQGuN19EIPmf+
      9ANYa1mwkL5QSZ5js1BsFYDjNMXLkd21HiUbSGuNv9/fGfzpx2hqaXa6L6mthQW+fEilME8S
      AMvAnpUl0k+9fvfZ1dv3UK/faw8gxhj8/f4Ol2UdiOiH25kFJIRAqTXmWYZSaxhr10XiwisX
      Q6uzFHTqQFEFf6Z6EtFPt3MAMFrDdV3kZQkBwFcKnlJQDQicpwb/t+Fw2bylAV8DEdG97R4A
      jIF0HLR8H+6R/XaB5h3+Gk8mMFLWamRD9F0k8zlc14Xr+/e+FWqg3UtAqyWfbcF/X2CvsxF8
      jXX+XfdkrUWSJIizbJnuSfSDhO32QyRm0H1IGAOr9frDlOXy33ds1J4zq7/EQbJd/78QAuWW
      POc0TfH3cIiAVT3pB2Lwp31k1Smo+qj+W7kuyixDFEXrwLora6fOjH/fNfuygurq9/uYTqcf
      XkNrjclshv7zMwTX/YmIPlBCKThbgrOSEt0ggNEaSZLAGINut7tzA3VbgL/l7EMIsR4EBoMB
      rLWYTKfs3UtEtMPWPQCBf4oEOY6DbrcLrTWiKIJSCu07rSseek+lFDzPQ5IkyyWh1Z8REdFX
      X6bzAkDougg870NzeMdxMBgM4HkeJpMJ0jS93V0eodVqIcsyRHEMxebtREQ7fRgABJazbOU4
      cHccHfc8D09PTwCA8XiMPM8vflPn7AVYa1GUJRzP49IPEdEeSmBZ+kEAkEIs8/5r1A0JwxBB
      ECCOYyRJgm63e7d6I0mSQCmFJE2xyDII14Vg7RMior2U6zgoVhk4QggIANoYyBqzZyEEut0u
      jDGIoghSSnS73avsD+x7zeFwiPl8Di8I0Op24XLph4joIFVoDbsKrtZaZEWBUmt0ggDKcWoV
      bJNSYjAYoCgKTCYT+L6/tY/ANczn82XHsnYbrW6X6/5ERDV92AMw1iLXGr7rwjki3bPiui6e
      np4gpcRoNKq9P3BOtzGtNRZ5Di8MGfyJiI4g/n5/t8pxUKwqfoar4C82ngrWFx8ZoOfzOfI8
      R7/fP2p/4PNTx7ZSFNMoQqk1irKEG4Y86EVEdCQlAHirSp/bnFPUrdPpLIP1dHrR/YHxZIIC
      gPJ9eCxyRUR0EpmX5boH8D7nNG0fDAZotVoYj8eI4/ik16lYa5GXJZd7iIjOJFuet3O9v3KJ
      WbtSCs/Pz1BKYTQawdQYdLa9t16VpiAiovPcvE6C7/vLWXyeIwiCrdccGnDCdvsat0ZE9KPc
      Zee0KIqTM37GkwkU1/2JiM52l0ppRVGcdGo4SRJ4YYivVf+JiOhYd3kCeH5+RpZlR9cRyouC
      wZ+I6ELuljw/GAywWCwwm81qXV+WJYoG9RgmInp0dxsAhBDo9XrwPA+j0WhrO8dN0WzG1E8i
      ogu6e7cU3/fhui6iKILrumhvyfDJsgwlcDBdlYiI6mtERK2KyVU1hD6fEUiSZFnfnxohjiKU
      RXHv2yCiM11lAKjb5H3zOmstwjDEYDDAZDLBYrEAAMRxjFlDu4/9FNZa5Fm2Hphb3S4cttok
      enhiNBpZpdTRefnH1gfaVtBt37VxHON9OERRluj//r2zGT1dX/V3NXl7Q6vbhR+Gd74jIrqE
      D9O4Q0G5znW7VA1n6pKOAyMEnv78+fA0cY9m9D9d9T3vDAbQBzbriehxrAeAOss151QGrfMe
      m9dli8X6sJg1BrPxGBAC/ZeXk9+fzuN6HrutEX0jR62rnBP8j5XlOfxVVzFjLTQ3HYmILqqx
      C+sGgHJdAMv0T+W68HYUjyP66ay1tSvsElUaOQAkaQq98bSxSFNYa9n8hWgH7o3RKRqZyzeP
      YwQbTeXDdpsloK/EGMMMq2+Cf490rEb+xGSrctHRaISMZwCuymh971sgojtp3ACQJMl69u8p
      BcECcFdV7bMQ0c/TuAGg1Hq9nun5PpSUzD0nIrqCxg0A3U4H2aoMxCJNUeY50vn8zndF1Bzj
      t7d73wJ9E40bAKSUwCqdLez1sDixfSTRd1TkOQ/j0cWsawE1hRACWmv8/fYGNwwhpYSxFvKE
      FpJE3w1LotAlNe4JwFoLx3HwP3/+wOT5Mk2RwZ8IwDLw54sFs7foIho3AAD/zHI6rRZEWaI8
      sncw0XfmhyEnRXQRjRwAKu12Gy/PzzDMAmqsOn0fiKiZGj0AWGvx+voKwROOjaXLkjVoGsJa
      i7IoOCBTbRL42pmrKbO6sixRGAOXReAaS7nuumw33Ze1FqPXV2juD1BNqgmBfpc4jtcloYlo
      PyklXv79b9YEotr2/qTce3Cw1sJdlSowxiAaje56P0RN5zgOU0SptuYcAPjEWouiKABrAcfB
      fDJBk84rEBE9uoPPivd8Cnh5eUE6n6PIsmU/AC4HERFdjGrq46IQAnEcwwII2m0E7AdARHRR
      CvjnWHnTjpkXRYHBywuY00BEdHlSb+RwCyEaE/yBZVZDluc89k5EdAXSuWLK2LnnCYIggC4K
      HgQjIrqCs9Jq6gZ3a+1JTxa+78PkOUql4LIhPBHRRZ08tb5FdpDWGmmaIp5O734mgYjouzlp
      ALhVMHYcB3/+/EGWptBFcZP3fDQcGInoVNIYc1QQuXXA6XQ6+Os//2l8wTFr7bIwmtY3/R5x
      g5yITqVGoxEcx0Gn04HneR8KexVFsS7FANxntimEQDyfAxv30URxFCGezeAHAfovLzd7X4en
      o4noROL19dWORiO0Wq31Zm0V6LUx8D0P3W4XwOkDwCVSS1/f36HCEGhQmuqm6klKOg6aeYdE
      RB9JpRT+/PkDay16vR4GgwGenp7guC7cVgu5MZjNZgDue0DMVarRZW6llHAcB/lice9bISKq
      RQLL4NXv9zGfz9efqJ4IpOtiURTLwmx3ZI15iM5gPnsXENGDkNWyjjEGemMD05ES3mo/wAtD
      RKungHsJwxAKQJYkD5v5YoxBkWUXfc2qCxQR0bHWaaBKKXS7XUynUwCAABB4HgDAWAt956Ab
      hiEG/T6UtZi8vWHxgAOBlPIqB9oe7ftARM0gN+v/uK77IZhIIRCssm/OCTGXClCO4+DXr1/4
      37/+AoqCKZBY7su4q4H6nvIswyJJ7n0bRHSELwfBfN9HHMdbLzbG3L1YXJWl5HseijiGbfj5
      gJ/C9TyohqfqEtFHYjQafZmef67dY5d/ePfgX/mQrtqQeyIiejT/D7khWszx2lg2AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Month' width='384'>
      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
      InIwAIiIFPX/05yroo/m1W0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='116' name='Summary' width='384'>
      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
      iTiYNL9JrwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
